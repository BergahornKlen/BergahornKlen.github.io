{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sycamore's Blog • All posts by \"develop\" tag",
    "description": "",
    "home_page_url": "https://www.sycamore.top",
    "items": [
        {
            "id": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/Ciri%20Main%20Menu%20Background/",
            "url": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/Ciri%20Main%20Menu%20Background/",
            "title": "希里的 CP2077 主菜单背景",
            "date_published": "2024-11-05T14:56:23.000Z",
            "content_html": "<p>我试图在 2.0+ 版本中修复 mod: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV4dXNtb2RzLmNvbS9jeWJlcnB1bmsyMDc3L21vZHMvMjU0MQ==\">Ciri in Night City - Main Menu Background Replacer</span>，添加对往日之影 Logo 的支持。</p>\n<hr />\n<p>原 Mod 启动效果图，可以看到没有往日之影的 logo：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730815548/Typera/2024/11/c42fe5caab097e56ca6115aa25028bde.png\" alt=\"image-20241106010540801\" /></p>\n<hr />\n<h1 id=\"修改方法\"><a class=\"anchor\" href=\"#修改方法\">#</a> 修改方法</h1>\n<p>修改工具：WolvenKit</p>\n<p>打开 Mod Browser，找到安装好的原 Mod</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730821582/Typera/2024/11/9c57c99a1327bca7356920876bd1a430.png\" alt=\"image-20241106024620104\" /></p>\n<p>全选，然后鼠标右键 Add selected items to project</p>\n<p>左侧 Project Explorer 中找到 menu_background.xbm 和  menu_background_1080p.xbm，这是出问题的文件（要替换），如下：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730821953/Typera/2024/11/b37f85839b86492728ac7dab74071424.png\" alt=\"image-20241106025230378\" /></p>\n<p>然后关闭 Mod Browser，根据 Project Explorer 中的路径（base\\gameplay\\gui\\fullscreen\\main_menu\\）找到游戏原文件中的 menu_background.xbm，如下：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730822090/Typera/2024/11/b58931a7d22c4213d44d924bd9586303.png\" alt=\"image-20241106025448022\" /></p>\n<p>选中，右键 Add selected items to project。弹窗问是否 Override，选择 Yes。替换成功。</p>\n<hr />\n<p>Buid -&gt; Pack Project，会在项目文件夹下打包为 zip 压缩包，这就是修复好的 Mod，安装到 CP2077，并卸载掉原 Mod。</p>\n<p>效果如下，成功补上往日之影的 Logo：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730822474/Typera/2024/11/fbc6ffdfb07adb1f77abc0edd380520e.png\" alt=\"image-20241106030106133\" /></p>\n<h1 id=\"分析原-mod\"><a class=\"anchor\" href=\"#分析原-mod\">#</a> 分析原 Mod</h1>\n<p>先阅读：关于 archive 中的文件介绍</p>\n<p>我的分析过程其实绕了很大的弯子，有兴趣可以看一下，其实蛮有意思的。</p>\n<p>或者你可以直接跳到：真正的修复点分析</p>\n<h2 id=\"定位背景图片的位置\"><a class=\"anchor\" href=\"#定位背景图片的位置\">#</a> 定位背景图片的位置</h2>\n<p>原 Mod 修改的文件还是有很多的，为了找到正确的思路，我选择先定位被修改的背景图片。</p>\n<hr />\n<p>根据游戏主线进度不同，赛博朋克的主菜单背景会更换图片。</p>\n<p>寻找后，我发现对应的目录： <code>base\\gameplay\\gui\\world\\loading_screens\\</code></p>\n<p>该目录下所谓 loading_screen_5_after_q101、loading_screen_10_after_q112，应该对应了主线中某些事件的发生，比如图片 loading_screen_10_after_q112\\loading_screen_10_shot_01.xbm：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730812872/Typera/2024/11/3609b16ee976bb030b37db1649a51d31.png\" alt=\"image-20241106002108908\" /></p>\n<p>这显然是在潜入山车安装病毒之后会出现的那个背景图。</p>\n<p>再比如图片 loading_screen_5_after_q101\\loading_screen_5_shot_01.xbm：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730809719/Typera/2024/11/ffbe63923183b7d8602c1046d1bc2b84.png\" alt=\"image-20241105232833312\" /></p>\n<p>这对应目前我的主菜单图片：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730809840/Typera/2024/11/a4e7e61df94dc872b29a72dd4b9fe6ba.png\" alt=\"image-20241105233029146\" /></p>\n<h2 id=\"进一步分析-inkwidget\"><a class=\"anchor\" href=\"#进一步分析-inkwidget\">#</a> 进一步分析 inkwidget</h2>\n<p>如果我要更换这个主菜单的背景图片，应该需要更改对应的 inkwidget 中的内容。</p>\n<p>原 mod 虽然不能显示往日之影的 logo，但是背景替换功能还是正常的，因此可以做一定的参考。</p>\n<p>着重分析：loading_screen_5_after_q101.inkwidget，因为这对应目前我主菜单的背景图片，方便我进行分析。这里面应该包括构成当前主菜单界面的资源。</p>\n<p>左：原文件；右：原 Mod 中修改后的文件</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730813070/Typera/2024/11/a23b9f1dc9b8ff26b6639b55bb702376.png\" alt=\"image-20241106002427225\" /></p>\n<p>先看右侧的原 Mod 文件，主要是文件 cp_bq_alphafaded.bk2，这就是被替换的希里背景动画。</p>\n<p>然后看左侧的游戏原文件，因为目前我的主菜单背景是 short01 的图片，所以不看 short02、short03 的内容：</p>\n<p><strong>smoke_loop.bk2</strong>：一个冒烟的动画视频</p>\n<p><strong>shot_01_assets.inkatlas</strong>：对文件 short_01_assets.xbm 进行了分割，提取出图片后面的三个光柱（ad）以及闪烁的灯光（antenna_lights）</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730814251/Typera/2024/11/28b987b84f447477c8c464cf7621f2cc.png\" alt=\"image-20241106004409120\" /></p>\n<p>short_01_assets.xbm 如下，应该能理解我的意思：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730814533/Typera/2024/11/01b0e79632d94fc3339833106b191ccf.png\" alt=\"image-20241106004850267\" /></p>\n<p><strong>loading_screen_5_shot_01.inkatlas</strong>：对应为主体背景，因为分割的那 4 个参数 Bottom、Left...，分别设置为了 0 和 1，也就是顶格分割，取了图片整体。</p>\n<p>如下是对主页面要素的标注，①对应 smoke_loop.bk2，②对应 shot_01_assets.inkatlas：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730814934/Typera/2024/11/48590ddd97bd03ba9d708ed367fa1ef8.png\" alt=\"image-20241106005529451\" /></p>\n<p>因此，如果只是要更换当前的背景图片，把 loading_screen_5_shot_01.xbm 换掉就行。</p>\n<h2 id=\"原-mod-思路分析\"><a class=\"anchor\" href=\"#原-mod-思路分析\">#</a> 原 Mod 思路分析</h2>\n<p>上一节说换 loading_screen_5_shot_01.xbm，其实是不够的。因为背景图片是会跟着主线剧情切换的。</p>\n<p>仔细对比可以发现，Mod 中更改的 loading_screen_5_after_q101.inkwidget，其内容和游戏原文件： base\\gameplay\\gui\\world\\loading_screens\\initial_loading_screen\\initial_loading_screen.inkwidget 完全一致。</p>\n<p>左：Mod 中的文件；右：initial_loading_screen.inkwidget</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730820048/Typera/2024/11/99b267900fa56628ce107626801cda75.png\" alt=\"image-20241106022045941\" /></p>\n<p>而我们知道，initial_loading_screen.inkwidget 中的 cp_bq_alphafaded.bk2，已经被替换为希里的背景动画了。</p>\n<p>因此 loading_screen_5_after_q101 对应的背景就会被替换为希里。</p>\n<p>再看原 Mod，每一个对应文件夹下的 inkwidget，其内容都被改成了 initial_loading_screen.inkwidget</p>\n<p>所以说原 Mod 的思路很绝：既然背景图片会换，那就把它们都改了！</p>\n<h2 id=\"真正的修复点分析\"><a class=\"anchor\" href=\"#真正的修复点分析\">#</a> 真正的修复点分析</h2>\n<p>上面分析了这么多其实对修复往日之影的 Logo 完全没用，因为在游戏原文件 loading_screen_5_after_q101.inkwidget 中，我并没有找到 Logo 的部分，上述内容都是原 Mod 更改背景图片的思路。</p>\n<p>但是把已经分析出作用的文件去掉，原 Mod 的结构就简单多了。</p>\n<hr />\n<p>我马上就发现了：base\\gameplay\\gui\\fullscreen\\main_menu\\menu_background.xbm，以及 menu_background_1080p.xbm</p>\n<p>左：原 Mod 中的 menu_background.xbm；右：游戏原目录中的 menu_background.xbm</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730821292/Typera/2024/11/e99ca6d089324954b2dfb1f94b502241.png\" alt=\"image-20241106024128469\" /></p>\n<p>少了什么一目了然，就是往日之影的 Logo。</p>\n<p>因此只要把正确的文件替换掉就行了。</p>\n",
            "tags": [
                "Develop",
                "Mod",
                "CP2077",
                "archive"
            ]
        },
        {
            "id": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/archive%E5%86%85%E5%AE%B9%E8%A7%A3%E6%9E%90/",
            "url": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/archive%E5%86%85%E5%AE%B9%E8%A7%A3%E6%9E%90/",
            "title": "archive 内容解析",
            "date_published": "2024-11-05T14:56:23.000Z",
            "content_html": "<p>本文内容会有些许凌乱，因为是 Mod 开发过程中，我对 archive 的一些文件代表的内容的想法。</p>\n<p>而且本人没有接触过 3D 动画、游戏制作这方面的内容，描述会存在很多不专业的地方。</p>\n<hr />\n<h1 id=\"文件类型和作用\"><a class=\"anchor\" href=\"#文件类型和作用\">#</a> 文件类型和作用</h1>\n<h2 id=\"xbm\"><a class=\"anchor\" href=\"#xbm\">#</a> xbm</h2>\n<p>这是一种图片类型的文件，对应游戏中出现的一些贴图的资源。</p>\n<p>通过 WolvenKit 可以查看图片的内容，比如 expansion_logo.xbm，如下所示：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730808788/Typera/2024/11/2c0934a8e3cdb50eaedad5bc5a2c17f0.png\" alt=\"image-20241105231302174\" /></p>\n<h2 id=\"inkatlas\"><a class=\"anchor\" href=\"#inkatlas\">#</a> inkatlas</h2>\n<p>这是某种代表了对 xbm 图片进行具体 ” 分割 “ 利用的文件。</p>\n<p>比如 expansion_logo.xbm 对应的 expansion_logo.inkatlas，内容如下：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730808890/Typera/2024/11/90a3c1b209806070d39ecdf04f3cd021.png\" alt=\"image-20241105231444965\" /></p>\n<p>再次展开这个 3：logo，并和 4：logo_EN 的数据进行对比，如下：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730808968/Typera/2024/11/4c4d7b17e1126d72bd67023217ae420f.png\" alt=\"image-20241105231603201\" /></p>\n<p>可以看到，其中包括的 Bottom、Left、Right、Top，对应的应该是 xbm 图片中 ” 被分割 “ 出来的具体图片的位置数据，这些数据被框定在 0~1 中。</p>\n<p>以下是我根据这些数据判断他们所对应图片的思路：</p>\n<p>3：logo 的 Bottom 和 4：logo_EN 的 Top 数值接近，几乎可以认为其就是上下相邻的两个图形。<br />\n他们的 Bottom 和 Top 数值接近于 1，因此应当位于 xbm 图片的下侧。<br />\n他们的 Left 数值相等且接近于 0，因此应当位于 xbm 图片的最左侧。</p>\n<p>所以，3：logo 和 4：logo_EN 应当分别对应 xbm 图片左下方的两个英文 logo: PHANTOM LIBERTY</p>\n<h2 id=\"inkwidget\"><a class=\"anchor\" href=\"#inkwidget\">#</a> inkwidget</h2>\n<p>这应该是说明了，组成某个界面需要用到的资源。</p>\n<hr />\n<h1 id=\"目录对应的功能\"><a class=\"anchor\" href=\"#目录对应的功能\">#</a> 目录对应的功能</h1>\n<h2 id=\"basegameplayguiworldloading_screens\"><a class=\"anchor\" href=\"#basegameplayguiworldloading_screens\">#</a>  <code>base\\gameplay\\gui\\world\\loading_screens\\</code></h2>\n<p>根据游戏主线进度不同，赛博朋克的主菜单背景会更换图片；加载存档时，会出现多张图片轮换播放。</p>\n<p>比如图片：loading_screen_5_after_q101\\loading_screen_5_shot_01.xbm</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730809719/Typera/2024/11/ffbe63923183b7d8602c1046d1bc2b84.png\" alt=\"image-20241105232833312\" /></p>\n<p>可以在主菜单看到同样的图片：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1730809840/Typera/2024/11/a4e7e61df94dc872b29a72dd4b9fe6ba.png\" alt=\"image-20241105233029146\" /></p>\n<p>因此，如果我要更换这个主菜单的背景图片，需要更改对应的 inkwidget 中的内容。</p>\n<p>（后续分析：）</p>\n",
            "tags": [
                "Develop",
                "Mod",
                "CP2077",
                "archive"
            ]
        },
        {
            "id": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/Weapon%20Inspection/",
            "url": "https://www.sycamore.top/Mod%20Develop/Cyberpunk%202077/Weapon%20Inspection/",
            "title": "武器验视 Mod",
            "date_published": "2024-11-05T06:05:53.000Z",
            "content_html": "<p>开发中：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vbmVTeWNhbW9yZS9XZWFwb24tSW5zcGVjdGlvbi1DUDIwNzc=\">noneSycamore/Weapon-Inspection-CP2077</span></p>\n",
            "tags": [
                "Develop",
                "Mod",
                "CP2077"
            ]
        },
        {
            "id": "https://www.sycamore.top/Develop/Electron/Google-Translate-Desktop/",
            "url": "https://www.sycamore.top/Develop/Electron/Google-Translate-Desktop/",
            "title": "Google-Translate-Desktop",
            "date_published": "2023-05-02T06:46:42.000Z",
            "content_html": "<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vbmVTeWNhbW9yZS9Hb29nbGUtVHJhbnNsYXRlLURlc2t0b3A=\">Google-Translate-Desktop</span> (private repo)</p>\n<p>腰斩了，因为我发现已经有很好用的了，推荐：[Pot](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wb3QtYXBwLmNvbS8=\">Pot | 跨平台划词翻译和 OCR</span>)</p>\n<p>因此以下内容仅作一个 idea 记录。</p>\n<hr />\n<h1 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<h2 id=\"选择环境\"><a class=\"anchor\" href=\"#选择环境\">#</a> 选择环境</h2>\n<p><span class=\"label info\">node v16.20.0</span> / <span class=\"label info\">electron v20.3.12</span></p>\n<h2 id=\"基本方案\"><a class=\"anchor\" href=\"#基本方案\">#</a> 基本方案</h2>\n<p>利用  <code>npm</code>  插件: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZ29vZ2xlLXRyYW5zbGF0ZS1hcGk=\">google-translate-api</span></p>\n<p>该插件提供了一个 API 接口：translate (text, options)，能实现谷歌翻译的基本功能</p>\n<p>用 electron 搭建程序的主要页面，用该插件实现简单的翻译</p>\n<h2 id=\"具体功能\"><a class=\"anchor\" href=\"#具体功能\">#</a> 具体功能</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\">  自动检测语言并能选择翻译的目标语言</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\">  详细释义？</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\">  划词翻译</label>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\">  替换、复制翻译结果</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\">  快捷键呼出</label></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"开发实现\"><a class=\"anchor\" href=\"#开发实现\">#</a> 开发实现</h1>\n<h2 id=\"搭建环境\"><a class=\"anchor\" href=\"#搭建环境\">#</a> 搭建环境</h2>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 16 lts  # 安装v15的新环境</span><br><span class=\"line\">nvm use 16.20.0</span><br><span class=\"line\"></span><br><span class=\"line\">npm init  # 初始化npm库</span><br><span class=\"line\">npm install electron@20.3.12 --save-dev  # 安装electron</span><br><span class=\"line\">npm install electron-builder  # 打包插件</span><br><span class=\"line\">npm install electron-store  # 数据存储插件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"基本页面\"><a class=\"anchor\" href=\"#基本页面\">#</a> 基本页面</h2>\n<p>通过 <span class=\"label info\">electron</span> 实现。</p>\n<p>细化主页面构成：</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_5\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_5\">   +++<strong> 顶部标题栏</strong><br />\n传统地去掉难看的原配 Windows 标题栏</label></p>\n<ul>\n<li>图标</li>\n<li>软件名称</li>\n<li>最小化 / 最大化 / 关闭<br />\n +++</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_6\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_6\">  +++ <strong>菜单栏</strong><br />\n功能切换</label></p>\n<ul>\n<li>翻译文本</li>\n<li>翻译文件？</li>\n<li>翻译网页？</li>\n</ul>\n<p>设置</p>\n<ul>\n<li>快捷键<br />\n +++</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\">  +++<strong> 具体功能实现页面</strong><br />\n翻译功能栏</label></p>\n<ul>\n<li>选择源语言 / 目标语言</li>\n<li>左右切换</li>\n</ul>\n<p>翻译内容 / 翻译结果<br />\n +++</p>\n</li>\n</ul>\n<h2 id=\"翻译功能\"><a class=\"anchor\" href=\"#翻译功能\">#</a> 翻译功能</h2>\n<p>调用 Google 的 API...</p>\n",
            "tags": [
                "Develop",
                "Electron",
                "Google Translate",
                "node"
            ]
        },
        {
            "id": "https://www.sycamore.top/Develop/Electron/nodeJS%E7%9B%B8%E5%85%B3/",
            "url": "https://www.sycamore.top/Develop/Electron/nodeJS%E7%9B%B8%E5%85%B3/",
            "title": "nodeJS相关",
            "date_published": "2023-04-30T09:42:04.000Z",
            "content_html": "<h2 id=\"node版本控制\"><a class=\"anchor\" href=\"#node版本控制\">#</a> node 版本控制</h2>\n<p>大部分时候，并不是版本越新越好，开发过程中经常会遇到某些好用的插件只支持较低版本的 <code>Nodejs</code> ，这时候就需要用到版本控制。</p>\n<p>使用<span class=\"label success\"> nvm</span>，可以轻松管理版本。实用命令如下：</p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install [版本号] [lts]  # 安装特定版本的node</span><br><span class=\"line\">nvm use [版本号]  # 切换特定版本的node</span><br><span class=\"line\">nvm list  # 列出已安装的node版本，星号标注当前使用的版本</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"项目仓库\"><a class=\"anchor\" href=\"#项目仓库\">#</a> 项目仓库</h2>\n<p><code>package.json</code>  是非常重要的文件，其中记录了项目的配置信息。</p>\n<p>最好加一个 <code>.gitignore</code>  文件，其中记录 <code>git</code>  上传时忽略更改的目录和文件，基本上需要包含 <code>*.log</code>  以及 <code>node_modules/</code> ，其中前者是可能存在的日志文件，后者是项目本地安装的插件</p>\n<p>这也体现了 <code>package.json</code>  文件的重要性，因为通常插件安装目录是不会上传的，所以每次 <code>clone</code>   <code>GitHub</code>  项目的时候，都是没有安装插件的状态，在执行任何更改之前都要执行命令： <code>npm install --force</code></p>\n<p>而 <code>package.json</code>  文件中有部分就记录了项目中应该安装的插件，上述命令也正是根据该文件中的这一部分来安装插件的。</p>\n<h2 id=\"git大文件管理\"><a class=\"anchor\" href=\"#git大文件管理\">#</a> git 大文件管理</h2>\n<p>也许有时你的项目中出现了大文件，即大于 100MB 的文件，这时候用 <code>git</code>  是上传不上去的，这就需要用到  <code>Git LFS</code></p>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git lfs install  # 安装Git LFS</span><br><span class=\"line\">git lfs track &quot;...&quot;  # 要追踪的大文件名，可为 *.exe 的格式</span><br><span class=\"line\">git add .gitattributes  # 配置文件</span><br></pre></td></tr></table></figure></p>\n<p>然后就是 <code>add/commit/push</code>  的常规操作了</p>\n<h2 id=\"npm-插件编写\"><a class=\"anchor\" href=\"#npm-插件编写\">#</a> npm 插件编写</h2>\n",
            "tags": [
                "Develop",
                "node",
                "npm",
                "plugs"
            ]
        },
        {
            "id": "https://www.sycamore.top/Develop/Electron/Sentences-Desktop%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/",
            "url": "https://www.sycamore.top/Develop/Electron/Sentences-Desktop%E6%A1%8C%E9%9D%A2%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/",
            "title": "Sentences-Desktop桌面程序开发",
            "date_published": "2023-04-30T09:35:33.000Z",
            "content_html": "<p>项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vbmVTeWNhbW9yZS9TZW50ZW5jZXMtRGVza3RvcA==\">Sentences-Desktop</span></p>\n<p>算是一个已完成的个人项目，虽然依旧不是很满意，而且我本人也没有在使用，</p>\n<p>但效果看起来还是很不错的，使用了 Hitokoto，具体在上述链接中，有空会更新以下开发中遇到的事情。</p>\n<hr />\n",
            "tags": [
                "Develop",
                "Electron",
                "node",
                "Hitokoto"
            ]
        },
        {
            "id": "https://www.sycamore.top/Develop/shokaX/hexo-shokaX%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9/",
            "url": "https://www.sycamore.top/Develop/shokaX/hexo-shokaX%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9/",
            "title": "hexo-shokaX主题修改",
            "date_published": "2023-04-30T06:05:53.000Z",
            "content_html": "<p><span class=\"label\">shokaX</span> 主题基于<span class=\"label\"> shoka</span> 主题进行二次开发，据说是因为原主题停止更新...</p>\n<p>因为各种原因吧，若按照 <code>shokaX</code>  作者写的文档更改配置的话，还需要一定程度上参考一下 <code>shoka</code>  主题的配置文档，</p>\n<p>所以，我决定记录一下这次博客迁移中对 <code>shokaX</code>  主题进行的更改。</p>\n<h1 id=\"主题安装\"><a class=\"anchor\" href=\"#主题安装\">#</a> 主题安装</h1>\n<p><code>shokaX</code>  主题配置文档中，使用主题作者自己搭的工具 <code>SXC</code>  进行安装，</p>\n<div class=\"note info\">\n<p>注意：因为自定义内容较多，所以选择从 <code>github</code>  安装。</p>\n</div>\n<p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">hexo init</span></span><br><span class=\"line\">npm install shokax-cli --location=global</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> your_blog</span></span><br><span class=\"line\">SXC install -r=github shokaX</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"主题修改\"><a class=\"anchor\" href=\"#主题修改\">#</a> 主题修改</h1>\n<h2 id=\"值得一说的基础配置\"><a class=\"anchor\" href=\"#值得一说的基础配置\">#</a> 值得一说的基础配置</h2>\n<h3 id=\"顶栏\"><a class=\"anchor\" href=\"#顶栏\">#</a> 顶栏</h3>\n<p>如果想和 <code>shoka</code>  主题站点的顶栏配置一样的，可以参考我的配置：</p>\n<p><span class=\"spoiler\" title=\"你知道得太多了\">shokaX 配置文档中说得也够详细了，但某些话读起来总有点谜语人的感觉，比如超链接的部分，文档的说法实在是令人迷惑...</span></p>\n<p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\">  <span class=\"attr\">home:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">home</span></span><br><span class=\"line\">  <span class=\"attr\">about:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">user</span></span><br><span class=\"line\">    <span class=\"attr\">aboutsite:</span> <span class=\"string\">/about/</span> <span class=\"string\">||</span> <span class=\"string\">cloud</span></span><br><span class=\"line\">  <span class=\"attr\">posts:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span> <span class=\"string\">/</span> <span class=\"string\">||</span> <span class=\"string\">feather</span></span><br><span class=\"line\">    <span class=\"attr\">archives:</span> <span class=\"string\">/archives/</span> <span class=\"string\">||</span> <span class=\"string\">list-alt</span></span><br><span class=\"line\">    <span class=\"attr\">categories:</span> <span class=\"string\">/categories/</span> <span class=\"string\">||</span> <span class=\"string\">th</span></span><br><span class=\"line\">    <span class=\"attr\">tags:</span> <span class=\"string\">/tags/</span> <span class=\"string\">||</span> <span class=\"string\">tags</span></span><br><span class=\"line\">  <span class=\"attr\">friends:</span> <span class=\"string\">/friends/</span> <span class=\"string\">||</span> <span class=\"string\">heart</span></span><br><span class=\"line\">  <span class=\"attr\">travellings:</span> <span class=\"string\">https://www.travellings.cn/go.html</span>  <span class=\"string\">||</span> <span class=\"string\">subway</span></span><br></pre></td></tr></table></figure></p>\n<div class=\"note default\">\n<p>关于自定义 icon 的添加， <code>shoka</code>  的配置文档中有提供一种解决方法，但建议参考我后面的解决方案 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zeWNhbW9yZS50b3AvJUU1JThEJTlBJUU1JUFFJUEyJUU0JUI4JUJCJUU5JUEyJTk4L2hleG8tc2hva2FYJUU0JUI4JUJCJUU5JUEyJTk4JUU0JUJGJUFFJUU2JTk0JUI5LyNpY29uZm9udCVFNSU5QiVCRSVFNiVBMCU4NyVFNSVCQSU5MyVFNiVCNyVCQiVFNSU4QSVBMA==\">[这里]</span></p>\n</div>\n<h3 id=\"评论系统\"><a class=\"anchor\" href=\"#评论系统\">#</a> 评论系统</h3>\n<p>因为 <code>minivaline</code>  停止维护且 <code>valine</code>  评论系统存在严重的安全问题， <code>shokaX</code>  推荐使用 <code>valine</code>  系其他评论系统代替。</p>\n<p>这里提供我的 <code>waline</code>  的配置方案（只放了与 <code>shokaX</code>  配置文档中不一样的部分）：</p>\n<p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">waline:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">serverURL:</span> <span class=\"string\">&quot;https://vercel.sycamore.top&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">locale:</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">placeholder:</span> <span class=\"string\">&quot;1. 提问前请先仔细阅读本文档⚡\\n2. 页面显示问题💥，请提供控制台截图📸或者您的测试网址\\n3. 其他任何报错💣，请提供详细描述和截图📸，祝食用愉快💪&quot;</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<div class=\"note default\">\n<p>其中， <code>serverURL</code>  按照 <code>waline</code>  官方文档绑定了域名， <code>local.placeholder</code>  为评论框中默认显示的文字</p>\n</div>\n<p>placeholder 与 valine 系统配置不同，我是在 waline 官方文档 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93YWxpbmUuanMub3JnL21pZ3JhdGlvbi92YWxpbmUuaHRtbA==\">从 Valine 迁移</span> 中找到的</p>\n<h3 id=\"搜索系统\"><a class=\"anchor\" href=\"#搜索系统\">#</a> 搜索系统</h3>\n<p><code>algolia</code>  必须参考官方文档进行配置，需要<strong>注意</strong>的是：</p>\n<ol>\n<li><code>algolia</code>  的配置应该是在 <code>_config.yml</code>  文件中的，我也不知道为啥要在 <code>config</code>  里：<br />\n<img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682840599/Typera/2023/04/c825437e5c42bd869ff137173c375d20.png\" alt=\"image-20230430151055652\" /><br />\n 也许是一定得这样？</li>\n<li>记得要运行 <code>hexo algolia</code>  将数据更新到 index 中</li>\n</ol>\n<h3 id=\"默认图片更改\"><a class=\"anchor\" href=\"#默认图片更改\">#</a> 默认图片更改</h3>\n<p>博客根目录下创建 <code>source/_data/assets</code>  文件夹，要改哪张图，直接将你的图片名称更改为对应的即可。原图片在主题目录的 <code>source/assets</code>  文件夹下。</p>\n<p>比如你要替换 <code>favicon.ico</code>  文件（站点图标），就把你的图标文件重命名为 <code>favicon.ico</code> ，然后放到 <code>source/_data/assets</code>  文件夹下。</p>\n<hr />\n<div class=\"note info\">\n<p>基础的部分不再赘述，配置可参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmthaXRha3UueHl6Lw==\"> shokaX</span> 和<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\"> shoka</span> 主题的配置文档。</p>\n</div>\n<h2 id=\"主题文件的修改和配置\"><a class=\"anchor\" href=\"#主题文件的修改和配置\">#</a> 主题文件的修改和配置</h2>\n<h3 id=\"音乐播放器\"><a class=\"anchor\" href=\"#音乐播放器\">#</a> 音乐播放器</h3>\n<p>配置格式参考 <code>shoka</code>  的配置文档，记得改的链接必须是有效的、公开的歌单，</p>\n<p>有效指的是：歌单中至少有一首歌不是 VIP 专享、能播放。否则会加载默认歌单。</p>\n<p>此外，如果你的播放器根本加载不出来，请检查主题目录下的 <code>source/js/_app/player.js</code>  和 <code>player.ts</code> ，</p>\n<p>全局搜索 <code>meting</code>  应该就能看到（因为是基于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2luamFob3cvbWV0aW5nLWFwaQ==\">meting-api</span> 这个项目的）</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682841729/Typera/2023/04/f4f07901036b72746edf40bb804de698.png\" alt=\"image-20230430160205536\" /></p>\n<p>上图中的代码是经过更改的，原来有问题的地方是在： <code>/meting/api?server=</code> ，把 <code>api</code>  删掉就行了</p>\n<h3 id=\"tab标签favicon内容修改\"><a class=\"anchor\" href=\"#tab标签favicon内容修改\">#</a> TAB 标签 favicon 内容修改</h3>\n<p>shoka 主题下，离开和进入博客页面时，浏览器 TAB 标签的内容会做出更改，</p>\n<p>修改这些内容的方式是更改主题目录的 <code>language</code>  文件夹下的文件，以 <code>en.yml</code>  为例：</p>\n<p><img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682843117/Typera/2023/04/d75d58621c39e3eec92653408e01f7fa.png\" alt=\"image-20230430162513720\" /></p>\n<p>修改这两行文字就行。</p>\n<h3 id=\"底部foot内容删改\"><a class=\"anchor\" href=\"#底部foot内容删改\">#</a> 底部 foot 内容删改</h3>\n<p>不是有意要删掉 <code>shokaX</code>  的链接，页脚再加上一行实在是有点丑陋，看在我写了这篇文章的份上就放过我吧  <code>&lt;(＿　＿)&gt;</code></p>\n<p>更改位置在主题目录下， <code>layout/_partials/footer.pug</code>  文件中</p>\n<p><code>pug</code>  文件还是简单易懂的，主要还是说一下增加的<span class=\"label success\">一言</span>功能：</p>\n<p>（API 链接来自 <span class=\"label primary\">hitokoto</span>）</p>\n<p>主要代码如下：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if theme.footer.sentences</span><br><span class=\"line\">    div(class=&quot;sentences-content&quot; id=&quot;sentences-content&quot;)</span><br><span class=\"line\">        = &#x27;一言...&#x27;</span><br><span class=\"line\">    div(class=&quot;sentences-from&quot; id=&quot;sentences-from&quot;)</span><br><span class=\"line\">        = &#x27;來源...&#x27;</span><br><span class=\"line\">    script(type=&quot;text/javascript&quot;).</span><br><span class=\"line\">        fetch(`https://v1.hitokoto.cn/`)</span><br><span class=\"line\">        .then(response =&gt; response.json())</span><br><span class=\"line\">        .then(data =&gt; &#123;</span><br><span class=\"line\">            var content = document.getElementById(&#x27;sentences-content&#x27;);</span><br><span class=\"line\">            content.innerText = data.hitokoto</span><br><span class=\"line\">            var from = document.getElementById(&#x27;sentences-from&#x27;);</span><br><span class=\"line\">            from.innerText = data.from + (data.from_who ? &#x27; · &#x27; + data.from_who : &#x27;&#x27;)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        .catch(console.error)</span><br></pre></td></tr></table></figure></p>\n<p>简单来说就是加了两个 <code>div</code> ，一个是一眼主体，一个是来源，分别给上  <code>id</code></p>\n<p>然后添加一个 <code>script</code> ，脚本中 <code>fetch</code>   <code>hitokoto</code>  的 API 地址，然后根据 <code>id</code>  找到对应的块，并使用 <code>innerText</code>  覆盖内容。</p>\n<h3 id=\"iconfont图标库添加\"><a class=\"anchor\" href=\"#iconfont图标库添加\">#</a> iconfont 图标库添加</h3>\n<p><code>shoka</code>  原作者给的方法是评论留言，等他看到之后，把你的用户加到他的项目里。</p>\n<p>因为是只读权限，所以你可以任意复制项目里的 <code>icon</code> ，再添加到你自己的项目中使用，最后再把配置文件中的 <code>iconfont</code>  一项改为自己项目的就行。</p>\n<p>但是这要建立在作者看到你的评论留言的基础上，鉴于他现在已经停止更新了...</p>\n<p>所以建议按照我的方法直接改改主题文件更合适一点，而且我的方法也简单粗暴。</p>\n<ol>\n<li>\n<p>首先，先配好 <code>iconfont</code>  的项目设置： <code>FontClass/Symbol 前缀</code> 改为 <code>i-</code> ， <code>Font Family</code>  改为 <code>ic</code> ，<br />\n记得重新生成一下在线链接。</p>\n</li>\n<li>\n<p>然后回到 hexo 中，配置文件中的 <code>iconfont</code>  下面加一个 <code>iconfont_plus</code>  的配置，名字随意，看着改就行</p>\n</li>\n<li>\n<p>然后找到主题目录下的 <code>source/css/</code>  文件夹，创建一个叫做 <code>_iconfont_plus.styl</code>  的文件，文件的内容就是你的 <code>iconfont</code>  项目在线链接的最后部分：<br />\n<img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682844808/Typera/2023/04/8cc09958217b38bce3b8f9affe55f60e.png\" alt=\"image-20230430165324891\" /></p>\n</li>\n<li>\n<p>找到主题目录下的 <code>scripts/generaters/config.js</code>  文件，如下位置添加一个 <code>'iconfont_plus'</code> ：<br />\n<img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682844981/Typera/2023/04/338e079adcf6f44d6edfc2c6ae9b54d4.png\" alt=\"image-20230430165616689\" /><br />\n（加了这个之后，就可以在主题目录之外修改了，根目录下增加文件 <code>source/_data/iconfont_plus.styl</code> ，但<strong>也可以不加</strong>)</p>\n</li>\n<li>\n<p>找到主题目录下的 <code>source/css/_variables.styl</code>  文件，增加：<br />\n<img data-src=\"https://res.cloudinary.com/sycamore/image/upload/v1682845300/Typera/2023/04/0c5218d4823d0c93f8b4d04589599140.png\" alt=\"image-20230430170136594\" /></p>\n</li>\n<li>\n<p>接下来修改同文件夹下的 <code>app.styl</code>  文件，这一步将 <code>iconfont</code>  项目的 <code>css</code>  文件 <code>import</code>  进了主文件<br />\n添加代码：</p>\n<p><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if $_iconfont_plus = hexo-config(&#x27;style<span class=\"selector-class\">.iconfont_plus</span>&#x27;)</span><br><span class=\"line\">  <span class=\"keyword\">@import</span> $_iconfont_plus;</span><br><span class=\"line\">else</span><br><span class=\"line\">  <span class=\"keyword\">@import</span> <span class=\"string\">&quot;_iconfont_plus&quot;</span>;</span><br></pre></td></tr></table></figure></p>\n</li>\n<li>\n<p>最后修改 <code>source/css/_common/scaffolding/base.styl</code>  文件中，</p>\n<p>添加代码：</p>\n<p><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;ic&#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.eot&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.eot?#iefix&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;embedded-opentype&#x27;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.woff2&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;woff2&#x27;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.woff&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;woff&#x27;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.ttf&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>),</span><br><span class=\"line\">  <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;//at.alicdn.com/t/c/font_&#x27;</span><span class=\"string\"> + $iconfont_plus + &#x27;.svg#ic&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;svg&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br />\n 注意，这一步中要检查你的 <code>iconfont</code>  项目在线链接是否和此处的匹配，若不匹配需要修改。</p>\n</li>\n</ol>\n<p>现在可以自由添加 icon 了，格式为： <code>&lt;i class=&quot;ic i-subway&quot;&gt; &lt;/i&gt;</code> 。</p>\n<p>我们只需要将新增的 icon 添加到自己的项目，然后更新一下在线链接，最后修改一下配置文件中 <code>iconfont_plus</code>  的内容。</p>\n<div class=\"note success\">\n<p>祝：食用愉快</p>\n</div>\n",
            "tags": [
                "Hexo",
                "shokaX",
                "博客主题",
                "Develop"
            ]
        }
    ]
}